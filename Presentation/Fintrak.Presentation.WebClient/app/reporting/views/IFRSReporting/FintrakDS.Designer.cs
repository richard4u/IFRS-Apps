//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Fintrak.Presentation.WebClient.app.reporting.views.IFRSReporting {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FintrakDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FintrakDS : global::System.Data.DataSet {
        
        private GetReport_ColorDataTable tableGetReport_Color;
        
        private Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable tableFinstat_Report_BalancesheetOrPL_Sub_Comparison;
        
        private Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable tableFinstat_Report_BalancesheetOrPL_Sub_Trend;
        
        private Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable tableFinstat_Report_BalancesheetOrPL_Gl_Trend;
        
        private finstat_Report_ManagementNoteBSDataTable tablefinstat_Report_ManagementNoteBS;
        
        private Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable tableFinstat_Report_BalancesheetOrPL_Gl_Comparison;
        
        private finstat_Report_ManagementNotePLDataTable tablefinstat_Report_ManagementNotePL;
        
        private finstat_Report_BalancesheetOrPL_GlDataTable tablefinstat_Report_BalancesheetOrPL_Gl;
        
        private finstat_Report_BalancesheetOrPLDataTable tablefinstat_Report_BalancesheetOrPL;
        
        private finstat_Report_BalancesheetOrPL_SubDataTable tablefinstat_Report_BalancesheetOrPL_Sub;
        
        private GetReport_DivisorDataTable tableGetReport_Divisor;
        
        private Finstat_Reports_QualitativeNotesDataTable tableFinstat_Reports_QualitativeNotes;
        
        private Finstat_Report_BalancesheetOrPL_TrendDataTable tableFinstat_Report_BalancesheetOrPL_Trend;
        
        private Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable tableFinstat_Report_BalancesheetOrPL_ComparisonTest;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FintrakDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected FintrakDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetReport_Color"] != null)) {
                    base.Tables.Add(new GetReport_ColorDataTable(ds.Tables["GetReport_Color"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Comparison"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Comparison"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Trend"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Trend"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Trend"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Trend"]));
                }
                if ((ds.Tables["finstat_Report_ManagementNoteBS"] != null)) {
                    base.Tables.Add(new finstat_Report_ManagementNoteBSDataTable(ds.Tables["finstat_Report_ManagementNoteBS"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Comparison"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Comparison"]));
                }
                if ((ds.Tables["finstat_Report_ManagementNotePL"] != null)) {
                    base.Tables.Add(new finstat_Report_ManagementNotePLDataTable(ds.Tables["finstat_Report_ManagementNotePL"]));
                }
                if ((ds.Tables["finstat_Report_BalancesheetOrPL_Gl"] != null)) {
                    base.Tables.Add(new finstat_Report_BalancesheetOrPL_GlDataTable(ds.Tables["finstat_Report_BalancesheetOrPL_Gl"]));
                }
                if ((ds.Tables["finstat_Report_BalancesheetOrPL"] != null)) {
                    base.Tables.Add(new finstat_Report_BalancesheetOrPLDataTable(ds.Tables["finstat_Report_BalancesheetOrPL"]));
                }
                if ((ds.Tables["finstat_Report_BalancesheetOrPL_Sub"] != null)) {
                    base.Tables.Add(new finstat_Report_BalancesheetOrPL_SubDataTable(ds.Tables["finstat_Report_BalancesheetOrPL_Sub"]));
                }
                if ((ds.Tables["GetReport_Divisor"] != null)) {
                    base.Tables.Add(new GetReport_DivisorDataTable(ds.Tables["GetReport_Divisor"]));
                }
                if ((ds.Tables["Finstat_Reports_QualitativeNotes"] != null)) {
                    base.Tables.Add(new Finstat_Reports_QualitativeNotesDataTable(ds.Tables["Finstat_Reports_QualitativeNotes"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Trend"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_TrendDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Trend"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_ComparisonTest"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_ComparisonTest"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetReport_ColorDataTable GetReport_Color {
            get {
                return this.tableGetReport_Color;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable Finstat_Report_BalancesheetOrPL_Sub_Comparison {
            get {
                return this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable Finstat_Report_BalancesheetOrPL_Sub_Trend {
            get {
                return this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable Finstat_Report_BalancesheetOrPL_Gl_Trend {
            get {
                return this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public finstat_Report_ManagementNoteBSDataTable finstat_Report_ManagementNoteBS {
            get {
                return this.tablefinstat_Report_ManagementNoteBS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable Finstat_Report_BalancesheetOrPL_Gl_Comparison {
            get {
                return this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public finstat_Report_ManagementNotePLDataTable finstat_Report_ManagementNotePL {
            get {
                return this.tablefinstat_Report_ManagementNotePL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public finstat_Report_BalancesheetOrPL_GlDataTable finstat_Report_BalancesheetOrPL_Gl {
            get {
                return this.tablefinstat_Report_BalancesheetOrPL_Gl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public finstat_Report_BalancesheetOrPLDataTable finstat_Report_BalancesheetOrPL {
            get {
                return this.tablefinstat_Report_BalancesheetOrPL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public finstat_Report_BalancesheetOrPL_SubDataTable finstat_Report_BalancesheetOrPL_Sub {
            get {
                return this.tablefinstat_Report_BalancesheetOrPL_Sub;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetReport_DivisorDataTable GetReport_Divisor {
            get {
                return this.tableGetReport_Divisor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Finstat_Reports_QualitativeNotesDataTable Finstat_Reports_QualitativeNotes {
            get {
                return this.tableFinstat_Reports_QualitativeNotes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Finstat_Report_BalancesheetOrPL_TrendDataTable Finstat_Report_BalancesheetOrPL_Trend {
            get {
                return this.tableFinstat_Report_BalancesheetOrPL_Trend;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable Finstat_Report_BalancesheetOrPL_ComparisonTest {
            get {
                return this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            FintrakDS cln = ((FintrakDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetReport_Color"] != null)) {
                    base.Tables.Add(new GetReport_ColorDataTable(ds.Tables["GetReport_Color"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Comparison"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Comparison"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Trend"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Sub_Trend"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Trend"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Trend"]));
                }
                if ((ds.Tables["finstat_Report_ManagementNoteBS"] != null)) {
                    base.Tables.Add(new finstat_Report_ManagementNoteBSDataTable(ds.Tables["finstat_Report_ManagementNoteBS"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Comparison"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Gl_Comparison"]));
                }
                if ((ds.Tables["finstat_Report_ManagementNotePL"] != null)) {
                    base.Tables.Add(new finstat_Report_ManagementNotePLDataTable(ds.Tables["finstat_Report_ManagementNotePL"]));
                }
                if ((ds.Tables["finstat_Report_BalancesheetOrPL_Gl"] != null)) {
                    base.Tables.Add(new finstat_Report_BalancesheetOrPL_GlDataTable(ds.Tables["finstat_Report_BalancesheetOrPL_Gl"]));
                }
                if ((ds.Tables["finstat_Report_BalancesheetOrPL"] != null)) {
                    base.Tables.Add(new finstat_Report_BalancesheetOrPLDataTable(ds.Tables["finstat_Report_BalancesheetOrPL"]));
                }
                if ((ds.Tables["finstat_Report_BalancesheetOrPL_Sub"] != null)) {
                    base.Tables.Add(new finstat_Report_BalancesheetOrPL_SubDataTable(ds.Tables["finstat_Report_BalancesheetOrPL_Sub"]));
                }
                if ((ds.Tables["GetReport_Divisor"] != null)) {
                    base.Tables.Add(new GetReport_DivisorDataTable(ds.Tables["GetReport_Divisor"]));
                }
                if ((ds.Tables["Finstat_Reports_QualitativeNotes"] != null)) {
                    base.Tables.Add(new Finstat_Reports_QualitativeNotesDataTable(ds.Tables["Finstat_Reports_QualitativeNotes"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_Trend"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_TrendDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_Trend"]));
                }
                if ((ds.Tables["Finstat_Report_BalancesheetOrPL_ComparisonTest"] != null)) {
                    base.Tables.Add(new Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable(ds.Tables["Finstat_Report_BalancesheetOrPL_ComparisonTest"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableGetReport_Color = ((GetReport_ColorDataTable)(base.Tables["GetReport_Color"]));
            if ((initTable == true)) {
                if ((this.tableGetReport_Color != null)) {
                    this.tableGetReport_Color.InitVars();
                }
            }
            this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison = ((Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable)(base.Tables["Finstat_Report_BalancesheetOrPL_Sub_Comparison"]));
            if ((initTable == true)) {
                if ((this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison != null)) {
                    this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.InitVars();
                }
            }
            this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend = ((Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable)(base.Tables["Finstat_Report_BalancesheetOrPL_Sub_Trend"]));
            if ((initTable == true)) {
                if ((this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend != null)) {
                    this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.InitVars();
                }
            }
            this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend = ((Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable)(base.Tables["Finstat_Report_BalancesheetOrPL_Gl_Trend"]));
            if ((initTable == true)) {
                if ((this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend != null)) {
                    this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.InitVars();
                }
            }
            this.tablefinstat_Report_ManagementNoteBS = ((finstat_Report_ManagementNoteBSDataTable)(base.Tables["finstat_Report_ManagementNoteBS"]));
            if ((initTable == true)) {
                if ((this.tablefinstat_Report_ManagementNoteBS != null)) {
                    this.tablefinstat_Report_ManagementNoteBS.InitVars();
                }
            }
            this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison = ((Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable)(base.Tables["Finstat_Report_BalancesheetOrPL_Gl_Comparison"]));
            if ((initTable == true)) {
                if ((this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison != null)) {
                    this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.InitVars();
                }
            }
            this.tablefinstat_Report_ManagementNotePL = ((finstat_Report_ManagementNotePLDataTable)(base.Tables["finstat_Report_ManagementNotePL"]));
            if ((initTable == true)) {
                if ((this.tablefinstat_Report_ManagementNotePL != null)) {
                    this.tablefinstat_Report_ManagementNotePL.InitVars();
                }
            }
            this.tablefinstat_Report_BalancesheetOrPL_Gl = ((finstat_Report_BalancesheetOrPL_GlDataTable)(base.Tables["finstat_Report_BalancesheetOrPL_Gl"]));
            if ((initTable == true)) {
                if ((this.tablefinstat_Report_BalancesheetOrPL_Gl != null)) {
                    this.tablefinstat_Report_BalancesheetOrPL_Gl.InitVars();
                }
            }
            this.tablefinstat_Report_BalancesheetOrPL = ((finstat_Report_BalancesheetOrPLDataTable)(base.Tables["finstat_Report_BalancesheetOrPL"]));
            if ((initTable == true)) {
                if ((this.tablefinstat_Report_BalancesheetOrPL != null)) {
                    this.tablefinstat_Report_BalancesheetOrPL.InitVars();
                }
            }
            this.tablefinstat_Report_BalancesheetOrPL_Sub = ((finstat_Report_BalancesheetOrPL_SubDataTable)(base.Tables["finstat_Report_BalancesheetOrPL_Sub"]));
            if ((initTable == true)) {
                if ((this.tablefinstat_Report_BalancesheetOrPL_Sub != null)) {
                    this.tablefinstat_Report_BalancesheetOrPL_Sub.InitVars();
                }
            }
            this.tableGetReport_Divisor = ((GetReport_DivisorDataTable)(base.Tables["GetReport_Divisor"]));
            if ((initTable == true)) {
                if ((this.tableGetReport_Divisor != null)) {
                    this.tableGetReport_Divisor.InitVars();
                }
            }
            this.tableFinstat_Reports_QualitativeNotes = ((Finstat_Reports_QualitativeNotesDataTable)(base.Tables["Finstat_Reports_QualitativeNotes"]));
            if ((initTable == true)) {
                if ((this.tableFinstat_Reports_QualitativeNotes != null)) {
                    this.tableFinstat_Reports_QualitativeNotes.InitVars();
                }
            }
            this.tableFinstat_Report_BalancesheetOrPL_Trend = ((Finstat_Report_BalancesheetOrPL_TrendDataTable)(base.Tables["Finstat_Report_BalancesheetOrPL_Trend"]));
            if ((initTable == true)) {
                if ((this.tableFinstat_Report_BalancesheetOrPL_Trend != null)) {
                    this.tableFinstat_Report_BalancesheetOrPL_Trend.InitVars();
                }
            }
            this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest = ((Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable)(base.Tables["Finstat_Report_BalancesheetOrPL_ComparisonTest"]));
            if ((initTable == true)) {
                if ((this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest != null)) {
                    this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "FintrakDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FintrakDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetReport_Color = new GetReport_ColorDataTable();
            base.Tables.Add(this.tableGetReport_Color);
            this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison = new Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable();
            base.Tables.Add(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison);
            this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend = new Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable();
            base.Tables.Add(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend);
            this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend = new Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable();
            base.Tables.Add(this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend);
            this.tablefinstat_Report_ManagementNoteBS = new finstat_Report_ManagementNoteBSDataTable();
            base.Tables.Add(this.tablefinstat_Report_ManagementNoteBS);
            this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison = new Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable();
            base.Tables.Add(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison);
            this.tablefinstat_Report_ManagementNotePL = new finstat_Report_ManagementNotePLDataTable();
            base.Tables.Add(this.tablefinstat_Report_ManagementNotePL);
            this.tablefinstat_Report_BalancesheetOrPL_Gl = new finstat_Report_BalancesheetOrPL_GlDataTable();
            base.Tables.Add(this.tablefinstat_Report_BalancesheetOrPL_Gl);
            this.tablefinstat_Report_BalancesheetOrPL = new finstat_Report_BalancesheetOrPLDataTable();
            base.Tables.Add(this.tablefinstat_Report_BalancesheetOrPL);
            this.tablefinstat_Report_BalancesheetOrPL_Sub = new finstat_Report_BalancesheetOrPL_SubDataTable();
            base.Tables.Add(this.tablefinstat_Report_BalancesheetOrPL_Sub);
            this.tableGetReport_Divisor = new GetReport_DivisorDataTable();
            base.Tables.Add(this.tableGetReport_Divisor);
            this.tableFinstat_Reports_QualitativeNotes = new Finstat_Reports_QualitativeNotesDataTable();
            base.Tables.Add(this.tableFinstat_Reports_QualitativeNotes);
            this.tableFinstat_Report_BalancesheetOrPL_Trend = new Finstat_Report_BalancesheetOrPL_TrendDataTable();
            base.Tables.Add(this.tableFinstat_Report_BalancesheetOrPL_Trend);
            this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest = new Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable();
            base.Tables.Add(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeGetReport_Color() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFinstat_Report_BalancesheetOrPL_Sub_Comparison() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFinstat_Report_BalancesheetOrPL_Sub_Trend() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFinstat_Report_BalancesheetOrPL_Gl_Trend() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializefinstat_Report_ManagementNoteBS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFinstat_Report_BalancesheetOrPL_Gl_Comparison() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializefinstat_Report_ManagementNotePL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializefinstat_Report_BalancesheetOrPL_Gl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializefinstat_Report_BalancesheetOrPL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializefinstat_Report_BalancesheetOrPL_Sub() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeGetReport_Divisor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFinstat_Reports_QualitativeNotes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFinstat_Report_BalancesheetOrPL_Trend() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFinstat_Report_BalancesheetOrPL_ComparisonTest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FintrakDS ds = new FintrakDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void GetReport_ColorRowChangeEventHandler(object sender, GetReport_ColorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEventHandler(object sender, Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEventHandler(object sender, Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEventHandler(object sender, Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void finstat_Report_ManagementNoteBSRowChangeEventHandler(object sender, finstat_Report_ManagementNoteBSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEventHandler(object sender, Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void finstat_Report_ManagementNotePLRowChangeEventHandler(object sender, finstat_Report_ManagementNotePLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void finstat_Report_BalancesheetOrPL_GlRowChangeEventHandler(object sender, finstat_Report_BalancesheetOrPL_GlRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void finstat_Report_BalancesheetOrPLRowChangeEventHandler(object sender, finstat_Report_BalancesheetOrPLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void finstat_Report_BalancesheetOrPL_SubRowChangeEventHandler(object sender, finstat_Report_BalancesheetOrPL_SubRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void GetReport_DivisorRowChangeEventHandler(object sender, GetReport_DivisorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Finstat_Reports_QualitativeNotesRowChangeEventHandler(object sender, Finstat_Reports_QualitativeNotesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Finstat_Report_BalancesheetOrPL_TrendRowChangeEventHandler(object sender, Finstat_Report_BalancesheetOrPL_TrendRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEventHandler(object sender, Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetReport_ColorDataTable : global::System.Data.TypedTableBase<GetReport_ColorRow> {
            
            private global::System.Data.DataColumn columnTextColorHeader;
            
            private global::System.Data.DataColumn columnTextColorBody;
            
            private global::System.Data.DataColumn columnBackGroundHeader;
            
            private global::System.Data.DataColumn columnBackGroundAlternate1;
            
            private global::System.Data.DataColumn columnSumGroupBackground;
            
            private global::System.Data.DataColumn columnBackGroundAlternate2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_ColorDataTable() {
                this.TableName = "GetReport_Color";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GetReport_ColorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected GetReport_ColorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TextColorHeaderColumn {
                get {
                    return this.columnTextColorHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TextColorBodyColumn {
                get {
                    return this.columnTextColorBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BackGroundHeaderColumn {
                get {
                    return this.columnBackGroundHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BackGroundAlternate1Column {
                get {
                    return this.columnBackGroundAlternate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SumGroupBackgroundColumn {
                get {
                    return this.columnSumGroupBackground;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BackGroundAlternate2Column {
                get {
                    return this.columnBackGroundAlternate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_ColorRow this[int index] {
                get {
                    return ((GetReport_ColorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_ColorRowChangeEventHandler GetReport_ColorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_ColorRowChangeEventHandler GetReport_ColorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_ColorRowChangeEventHandler GetReport_ColorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_ColorRowChangeEventHandler GetReport_ColorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddGetReport_ColorRow(GetReport_ColorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_ColorRow AddGetReport_ColorRow(string TextColorHeader, string TextColorBody, string BackGroundHeader, string BackGroundAlternate1, string SumGroupBackground, string BackGroundAlternate2) {
                GetReport_ColorRow rowGetReport_ColorRow = ((GetReport_ColorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TextColorHeader,
                        TextColorBody,
                        BackGroundHeader,
                        BackGroundAlternate1,
                        SumGroupBackground,
                        BackGroundAlternate2};
                rowGetReport_ColorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetReport_ColorRow);
                return rowGetReport_ColorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetReport_ColorDataTable cln = ((GetReport_ColorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetReport_ColorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnTextColorHeader = base.Columns["TextColorHeader"];
                this.columnTextColorBody = base.Columns["TextColorBody"];
                this.columnBackGroundHeader = base.Columns["BackGroundHeader"];
                this.columnBackGroundAlternate1 = base.Columns["BackGroundAlternate1"];
                this.columnSumGroupBackground = base.Columns["SumGroupBackground"];
                this.columnBackGroundAlternate2 = base.Columns["BackGroundAlternate2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnTextColorHeader = new global::System.Data.DataColumn("TextColorHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextColorHeader);
                this.columnTextColorBody = new global::System.Data.DataColumn("TextColorBody", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTextColorBody);
                this.columnBackGroundHeader = new global::System.Data.DataColumn("BackGroundHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackGroundHeader);
                this.columnBackGroundAlternate1 = new global::System.Data.DataColumn("BackGroundAlternate1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackGroundAlternate1);
                this.columnSumGroupBackground = new global::System.Data.DataColumn("SumGroupBackground", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumGroupBackground);
                this.columnBackGroundAlternate2 = new global::System.Data.DataColumn("BackGroundAlternate2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackGroundAlternate2);
                this.columnTextColorHeader.MaxLength = 50;
                this.columnTextColorBody.MaxLength = 50;
                this.columnBackGroundHeader.MaxLength = 50;
                this.columnBackGroundAlternate1.MaxLength = 50;
                this.columnSumGroupBackground.MaxLength = 50;
                this.columnBackGroundAlternate2.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_ColorRow NewGetReport_ColorRow() {
                return ((GetReport_ColorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetReport_ColorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetReport_ColorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetReport_ColorRowChanged != null)) {
                    this.GetReport_ColorRowChanged(this, new GetReport_ColorRowChangeEvent(((GetReport_ColorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetReport_ColorRowChanging != null)) {
                    this.GetReport_ColorRowChanging(this, new GetReport_ColorRowChangeEvent(((GetReport_ColorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetReport_ColorRowDeleted != null)) {
                    this.GetReport_ColorRowDeleted(this, new GetReport_ColorRowChangeEvent(((GetReport_ColorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetReport_ColorRowDeleting != null)) {
                    this.GetReport_ColorRowDeleting(this, new GetReport_ColorRowChangeEvent(((GetReport_ColorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveGetReport_ColorRow(GetReport_ColorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetReport_ColorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable : global::System.Data.TypedTableBase<Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow> {
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnSubPosition;
            
            private global::System.Data.DataColumn columnSubCaption;
            
            private global::System.Data.DataColumn columnSubSubCaption;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnPreviousDate;
            
            private global::System.Data.DataColumn columnCurrentDate;
            
            private global::System.Data.DataColumn columnCurrentAmount;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnGrowth;
            
            private global::System.Data.DataColumn columnpercentage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable() {
                this.TableName = "Finstat_Report_BalancesheetOrPL_Sub_Comparison";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubPositionColumn {
                get {
                    return this.columnSubPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubCaptionColumn {
                get {
                    return this.columnSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubSubCaptionColumn {
                get {
                    return this.columnSubSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousDateColumn {
                get {
                    return this.columnPreviousDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentDateColumn {
                get {
                    return this.columnCurrentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountColumn {
                get {
                    return this.columnCurrentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GrowthColumn {
                get {
                    return this.columnGrowth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn percentageColumn {
                get {
                    return this.columnpercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow this[int index] {
                get {
                    return ((Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow(Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow AddFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow(string MainCaption, long SubPosition, string SubCaption, string SubSubCaption, string RefNo, System.DateTime PreviousDate, System.DateTime CurrentDate, decimal CurrentAmount, decimal PreviousAmount, decimal Growth, decimal percentage) {
                Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow rowFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow = ((Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MainCaption,
                        SubPosition,
                        SubCaption,
                        SubSubCaption,
                        RefNo,
                        PreviousDate,
                        CurrentDate,
                        CurrentAmount,
                        PreviousAmount,
                        Growth,
                        percentage};
                rowFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow);
                return rowFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable cln = ((Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnSubPosition = base.Columns["SubPosition"];
                this.columnSubCaption = base.Columns["SubCaption"];
                this.columnSubSubCaption = base.Columns["SubSubCaption"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnPreviousDate = base.Columns["PreviousDate"];
                this.columnCurrentDate = base.Columns["CurrentDate"];
                this.columnCurrentAmount = base.Columns["CurrentAmount"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnGrowth = base.Columns["Growth"];
                this.columnpercentage = base.Columns["percentage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnSubPosition = new global::System.Data.DataColumn("SubPosition", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubPosition);
                this.columnSubCaption = new global::System.Data.DataColumn("SubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCaption);
                this.columnSubSubCaption = new global::System.Data.DataColumn("SubSubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubCaption);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnPreviousDate = new global::System.Data.DataColumn("PreviousDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousDate);
                this.columnCurrentDate = new global::System.Data.DataColumn("CurrentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDate);
                this.columnCurrentAmount = new global::System.Data.DataColumn("CurrentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmount);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnGrowth = new global::System.Data.DataColumn("Growth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrowth);
                this.columnpercentage = new global::System.Data.DataColumn("percentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercentage);
                this.columnMainCaption.MaxLength = 250;
                this.columnSubCaption.MaxLength = 200;
                this.columnSubSubCaption.MaxLength = 200;
                this.columnRefNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow NewFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow() {
                return ((Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChanged != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChanged(this, new Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChanging != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChanging(this, new Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowDeleted != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowDeleted(this, new Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowDeleting != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowDeleting(this, new Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFinstat_Report_BalancesheetOrPL_Sub_ComparisonRow(Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable : global::System.Data.TypedTableBase<Finstat_Report_BalancesheetOrPL_Sub_TrendRow> {
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnSubPosition;
            
            private global::System.Data.DataColumn columnSubCaption;
            
            private global::System.Data.DataColumn columnSubSubCaption;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnCurrentDate;
            
            private global::System.Data.DataColumn columnCurrentAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable() {
                this.TableName = "Finstat_Report_BalancesheetOrPL_Sub_Trend";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubPositionColumn {
                get {
                    return this.columnSubPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubCaptionColumn {
                get {
                    return this.columnSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubSubCaptionColumn {
                get {
                    return this.columnSubSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentDateColumn {
                get {
                    return this.columnCurrentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountColumn {
                get {
                    return this.columnCurrentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_TrendRow this[int index] {
                get {
                    return ((Finstat_Report_BalancesheetOrPL_Sub_TrendRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_TrendRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_TrendRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_TrendRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Sub_TrendRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFinstat_Report_BalancesheetOrPL_Sub_TrendRow(Finstat_Report_BalancesheetOrPL_Sub_TrendRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_TrendRow AddFinstat_Report_BalancesheetOrPL_Sub_TrendRow(string MainCaption, int SubPosition, string SubCaption, string SubSubCaption, string RefNo, System.DateTime CurrentDate, decimal CurrentAmount) {
                Finstat_Report_BalancesheetOrPL_Sub_TrendRow rowFinstat_Report_BalancesheetOrPL_Sub_TrendRow = ((Finstat_Report_BalancesheetOrPL_Sub_TrendRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MainCaption,
                        SubPosition,
                        SubCaption,
                        SubSubCaption,
                        RefNo,
                        CurrentDate,
                        CurrentAmount};
                rowFinstat_Report_BalancesheetOrPL_Sub_TrendRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinstat_Report_BalancesheetOrPL_Sub_TrendRow);
                return rowFinstat_Report_BalancesheetOrPL_Sub_TrendRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable cln = ((Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnSubPosition = base.Columns["SubPosition"];
                this.columnSubCaption = base.Columns["SubCaption"];
                this.columnSubSubCaption = base.Columns["SubSubCaption"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnCurrentDate = base.Columns["CurrentDate"];
                this.columnCurrentAmount = base.Columns["CurrentAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnSubPosition = new global::System.Data.DataColumn("SubPosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubPosition);
                this.columnSubCaption = new global::System.Data.DataColumn("SubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCaption);
                this.columnSubSubCaption = new global::System.Data.DataColumn("SubSubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubCaption);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnCurrentDate = new global::System.Data.DataColumn("CurrentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDate);
                this.columnCurrentAmount = new global::System.Data.DataColumn("CurrentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmount);
                this.columnMainCaption.MaxLength = 250;
                this.columnSubCaption.MaxLength = 200;
                this.columnSubSubCaption.MaxLength = 200;
                this.columnRefNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_TrendRow NewFinstat_Report_BalancesheetOrPL_Sub_TrendRow() {
                return ((Finstat_Report_BalancesheetOrPL_Sub_TrendRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Finstat_Report_BalancesheetOrPL_Sub_TrendRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Finstat_Report_BalancesheetOrPL_Sub_TrendRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowChanged != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowChanged(this, new Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowChanging != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowChanging(this, new Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowDeleted != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowDeleted(this, new Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowDeleting != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Sub_TrendRowDeleting(this, new Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Sub_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFinstat_Report_BalancesheetOrPL_Sub_TrendRow(Finstat_Report_BalancesheetOrPL_Sub_TrendRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable : global::System.Data.TypedTableBase<Finstat_Report_BalancesheetOrPL_Gl_TrendRow> {
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnSubCaption;
            
            private global::System.Data.DataColumn columnSubSubCaption;
            
            private global::System.Data.DataColumn columncurrentDate;
            
            private global::System.Data.DataColumn columnGLCode;
            
            private global::System.Data.DataColumn columnGLDescription;
            
            private global::System.Data.DataColumn columnCurrentAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable() {
                this.TableName = "Finstat_Report_BalancesheetOrPL_Gl_Trend";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubCaptionColumn {
                get {
                    return this.columnSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubSubCaptionColumn {
                get {
                    return this.columnSubSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn currentDateColumn {
                get {
                    return this.columncurrentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GLCodeColumn {
                get {
                    return this.columnGLCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GLDescriptionColumn {
                get {
                    return this.columnGLDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountColumn {
                get {
                    return this.columnCurrentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_TrendRow this[int index] {
                get {
                    return ((Finstat_Report_BalancesheetOrPL_Gl_TrendRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_TrendRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_TrendRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_TrendRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_TrendRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFinstat_Report_BalancesheetOrPL_Gl_TrendRow(Finstat_Report_BalancesheetOrPL_Gl_TrendRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_TrendRow AddFinstat_Report_BalancesheetOrPL_Gl_TrendRow(string MainCaption, string SubCaption, string SubSubCaption, System.DateTime currentDate, string GLCode, string GLDescription, decimal CurrentAmount) {
                Finstat_Report_BalancesheetOrPL_Gl_TrendRow rowFinstat_Report_BalancesheetOrPL_Gl_TrendRow = ((Finstat_Report_BalancesheetOrPL_Gl_TrendRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MainCaption,
                        SubCaption,
                        SubSubCaption,
                        currentDate,
                        GLCode,
                        GLDescription,
                        CurrentAmount};
                rowFinstat_Report_BalancesheetOrPL_Gl_TrendRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinstat_Report_BalancesheetOrPL_Gl_TrendRow);
                return rowFinstat_Report_BalancesheetOrPL_Gl_TrendRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable cln = ((Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnSubCaption = base.Columns["SubCaption"];
                this.columnSubSubCaption = base.Columns["SubSubCaption"];
                this.columncurrentDate = base.Columns["currentDate"];
                this.columnGLCode = base.Columns["GLCode"];
                this.columnGLDescription = base.Columns["GLDescription"];
                this.columnCurrentAmount = base.Columns["CurrentAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnSubCaption = new global::System.Data.DataColumn("SubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCaption);
                this.columnSubSubCaption = new global::System.Data.DataColumn("SubSubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubCaption);
                this.columncurrentDate = new global::System.Data.DataColumn("currentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrentDate);
                this.columnGLCode = new global::System.Data.DataColumn("GLCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCode);
                this.columnGLDescription = new global::System.Data.DataColumn("GLDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLDescription);
                this.columnCurrentAmount = new global::System.Data.DataColumn("CurrentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmount);
                this.columnMainCaption.MaxLength = 100;
                this.columnSubCaption.MaxLength = 200;
                this.columnSubSubCaption.AllowDBNull = false;
                this.columnGLCode.MaxLength = 50;
                this.columnGLDescription.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_TrendRow NewFinstat_Report_BalancesheetOrPL_Gl_TrendRow() {
                return ((Finstat_Report_BalancesheetOrPL_Gl_TrendRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Finstat_Report_BalancesheetOrPL_Gl_TrendRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Finstat_Report_BalancesheetOrPL_Gl_TrendRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowChanged != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowChanged(this, new Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowChanging != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowChanging(this, new Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowDeleted != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowDeleted(this, new Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowDeleting != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_TrendRowDeleting(this, new Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFinstat_Report_BalancesheetOrPL_Gl_TrendRow(Finstat_Report_BalancesheetOrPL_Gl_TrendRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class finstat_Report_ManagementNoteBSDataTable : global::System.Data.TypedTableBase<finstat_Report_ManagementNoteBSRow> {
            
            private global::System.Data.DataColumn columnRunDate;
            
            private global::System.Data.DataColumn columnPreviousRunDate;
            
            private global::System.Data.DataColumn columnPreviousPreviousRunDate;
            
            private global::System.Data.DataColumn columnAveragerate;
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnSubCaption;
            
            private global::System.Data.DataColumn columnSubSubCaption;
            
            private global::System.Data.DataColumn columnSubPosition;
            
            private global::System.Data.DataColumn columnfintype;
            
            private global::System.Data.DataColumn columnfinsubtype;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnRefNote;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnPreviousPreviousAmount;
            
            private global::System.Data.DataColumn columnYTDVariance;
            
            private global::System.Data.DataColumn columnYTDVariancePercentage;
            
            private global::System.Data.DataColumn columnIsBold;
            
            private global::System.Data.DataColumn columnIsTotalLine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNoteBSDataTable() {
                this.TableName = "finstat_Report_ManagementNoteBS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_ManagementNoteBSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected finstat_Report_ManagementNoteBSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RunDateColumn {
                get {
                    return this.columnRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousRunDateColumn {
                get {
                    return this.columnPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousRunDateColumn {
                get {
                    return this.columnPreviousPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AveragerateColumn {
                get {
                    return this.columnAveragerate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubCaptionColumn {
                get {
                    return this.columnSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubSubCaptionColumn {
                get {
                    return this.columnSubSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubPositionColumn {
                get {
                    return this.columnSubPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fintypeColumn {
                get {
                    return this.columnfintype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn finsubtypeColumn {
                get {
                    return this.columnfinsubtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefNoteColumn {
                get {
                    return this.columnRefNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousAmountColumn {
                get {
                    return this.columnPreviousPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVarianceColumn {
                get {
                    return this.columnYTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVariancePercentageColumn {
                get {
                    return this.columnYTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsBoldColumn {
                get {
                    return this.columnIsBold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsTotalLineColumn {
                get {
                    return this.columnIsTotalLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNoteBSRow this[int index] {
                get {
                    return ((finstat_Report_ManagementNoteBSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNoteBSRowChangeEventHandler finstat_Report_ManagementNoteBSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNoteBSRowChangeEventHandler finstat_Report_ManagementNoteBSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNoteBSRowChangeEventHandler finstat_Report_ManagementNoteBSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNoteBSRowChangeEventHandler finstat_Report_ManagementNoteBSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addfinstat_Report_ManagementNoteBSRow(finstat_Report_ManagementNoteBSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNoteBSRow Addfinstat_Report_ManagementNoteBSRow(
                        System.DateTime RunDate, 
                        System.DateTime PreviousRunDate, 
                        System.DateTime PreviousPreviousRunDate, 
                        double Averagerate, 
                        string MainCaption, 
                        string SubCaption, 
                        string SubSubCaption, 
                        int SubPosition, 
                        string fintype, 
                        string finsubtype, 
                        int Position, 
                        string RefNote, 
                        decimal Amount, 
                        decimal PreviousAmount, 
                        decimal PreviousPreviousAmount, 
                        decimal YTDVariance, 
                        decimal YTDVariancePercentage, 
                        long IsBold, 
                        long IsTotalLine) {
                finstat_Report_ManagementNoteBSRow rowfinstat_Report_ManagementNoteBSRow = ((finstat_Report_ManagementNoteBSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RunDate,
                        PreviousRunDate,
                        PreviousPreviousRunDate,
                        Averagerate,
                        MainCaption,
                        SubCaption,
                        SubSubCaption,
                        SubPosition,
                        fintype,
                        finsubtype,
                        Position,
                        RefNote,
                        Amount,
                        PreviousAmount,
                        PreviousPreviousAmount,
                        YTDVariance,
                        YTDVariancePercentage,
                        IsBold,
                        IsTotalLine};
                rowfinstat_Report_ManagementNoteBSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfinstat_Report_ManagementNoteBSRow);
                return rowfinstat_Report_ManagementNoteBSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                finstat_Report_ManagementNoteBSDataTable cln = ((finstat_Report_ManagementNoteBSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new finstat_Report_ManagementNoteBSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRunDate = base.Columns["RunDate"];
                this.columnPreviousRunDate = base.Columns["PreviousRunDate"];
                this.columnPreviousPreviousRunDate = base.Columns["PreviousPreviousRunDate"];
                this.columnAveragerate = base.Columns["Averagerate"];
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnSubCaption = base.Columns["SubCaption"];
                this.columnSubSubCaption = base.Columns["SubSubCaption"];
                this.columnSubPosition = base.Columns["SubPosition"];
                this.columnfintype = base.Columns["fintype"];
                this.columnfinsubtype = base.Columns["finsubtype"];
                this.columnPosition = base.Columns["Position"];
                this.columnRefNote = base.Columns["RefNote"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnPreviousPreviousAmount = base.Columns["PreviousPreviousAmount"];
                this.columnYTDVariance = base.Columns["YTDVariance"];
                this.columnYTDVariancePercentage = base.Columns["YTDVariancePercentage"];
                this.columnIsBold = base.Columns["IsBold"];
                this.columnIsTotalLine = base.Columns["IsTotalLine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRunDate = new global::System.Data.DataColumn("RunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDate);
                this.columnPreviousRunDate = new global::System.Data.DataColumn("PreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousRunDate);
                this.columnPreviousPreviousRunDate = new global::System.Data.DataColumn("PreviousPreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousRunDate);
                this.columnAveragerate = new global::System.Data.DataColumn("Averagerate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveragerate);
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnSubCaption = new global::System.Data.DataColumn("SubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCaption);
                this.columnSubSubCaption = new global::System.Data.DataColumn("SubSubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubCaption);
                this.columnSubPosition = new global::System.Data.DataColumn("SubPosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubPosition);
                this.columnfintype = new global::System.Data.DataColumn("fintype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfintype);
                this.columnfinsubtype = new global::System.Data.DataColumn("finsubtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinsubtype);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnRefNote = new global::System.Data.DataColumn("RefNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNote);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnPreviousPreviousAmount = new global::System.Data.DataColumn("PreviousPreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousAmount);
                this.columnYTDVariance = new global::System.Data.DataColumn("YTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariance);
                this.columnYTDVariancePercentage = new global::System.Data.DataColumn("YTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariancePercentage);
                this.columnIsBold = new global::System.Data.DataColumn("IsBold", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBold);
                this.columnIsTotalLine = new global::System.Data.DataColumn("IsTotalLine", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTotalLine);
                this.columnMainCaption.MaxLength = 250;
                this.columnSubCaption.MaxLength = 250;
                this.columnSubSubCaption.MaxLength = 250;
                this.columnfintype.MaxLength = 5;
                this.columnfinsubtype.MaxLength = 50;
                this.columnRefNote.MaxLength = 5;
                this.columnIsBold.AllowDBNull = false;
                this.columnIsTotalLine.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNoteBSRow Newfinstat_Report_ManagementNoteBSRow() {
                return ((finstat_Report_ManagementNoteBSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new finstat_Report_ManagementNoteBSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(finstat_Report_ManagementNoteBSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.finstat_Report_ManagementNoteBSRowChanged != null)) {
                    this.finstat_Report_ManagementNoteBSRowChanged(this, new finstat_Report_ManagementNoteBSRowChangeEvent(((finstat_Report_ManagementNoteBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.finstat_Report_ManagementNoteBSRowChanging != null)) {
                    this.finstat_Report_ManagementNoteBSRowChanging(this, new finstat_Report_ManagementNoteBSRowChangeEvent(((finstat_Report_ManagementNoteBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.finstat_Report_ManagementNoteBSRowDeleted != null)) {
                    this.finstat_Report_ManagementNoteBSRowDeleted(this, new finstat_Report_ManagementNoteBSRowChangeEvent(((finstat_Report_ManagementNoteBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.finstat_Report_ManagementNoteBSRowDeleting != null)) {
                    this.finstat_Report_ManagementNoteBSRowDeleting(this, new finstat_Report_ManagementNoteBSRowChangeEvent(((finstat_Report_ManagementNoteBSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removefinstat_Report_ManagementNoteBSRow(finstat_Report_ManagementNoteBSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "finstat_Report_ManagementNoteBSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable : global::System.Data.TypedTableBase<Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow> {
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnSubCaption;
            
            private global::System.Data.DataColumn columnSubSubCaption;
            
            private global::System.Data.DataColumn columnGLCode;
            
            private global::System.Data.DataColumn columnGLDescription;
            
            private global::System.Data.DataColumn columnPreviousDate;
            
            private global::System.Data.DataColumn columnCurrentDate;
            
            private global::System.Data.DataColumn columnCurrentAmount;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnGrowth;
            
            private global::System.Data.DataColumn columnpercentage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable() {
                this.TableName = "Finstat_Report_BalancesheetOrPL_Gl_Comparison";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubCaptionColumn {
                get {
                    return this.columnSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubSubCaptionColumn {
                get {
                    return this.columnSubSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GLCodeColumn {
                get {
                    return this.columnGLCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GLDescriptionColumn {
                get {
                    return this.columnGLDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousDateColumn {
                get {
                    return this.columnPreviousDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentDateColumn {
                get {
                    return this.columnCurrentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountColumn {
                get {
                    return this.columnCurrentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GrowthColumn {
                get {
                    return this.columnGrowth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn percentageColumn {
                get {
                    return this.columnpercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow this[int index] {
                get {
                    return ((Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEventHandler Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow(Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow AddFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow(string MainCaption, string SubCaption, string SubSubCaption, string GLCode, string GLDescription, System.DateTime PreviousDate, System.DateTime CurrentDate, decimal CurrentAmount, decimal PreviousAmount, decimal Growth, decimal percentage) {
                Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow rowFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow = ((Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MainCaption,
                        SubCaption,
                        SubSubCaption,
                        GLCode,
                        GLDescription,
                        PreviousDate,
                        CurrentDate,
                        CurrentAmount,
                        PreviousAmount,
                        Growth,
                        percentage};
                rowFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow);
                return rowFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable cln = ((Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnSubCaption = base.Columns["SubCaption"];
                this.columnSubSubCaption = base.Columns["SubSubCaption"];
                this.columnGLCode = base.Columns["GLCode"];
                this.columnGLDescription = base.Columns["GLDescription"];
                this.columnPreviousDate = base.Columns["PreviousDate"];
                this.columnCurrentDate = base.Columns["CurrentDate"];
                this.columnCurrentAmount = base.Columns["CurrentAmount"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnGrowth = base.Columns["Growth"];
                this.columnpercentage = base.Columns["percentage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnSubCaption = new global::System.Data.DataColumn("SubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCaption);
                this.columnSubSubCaption = new global::System.Data.DataColumn("SubSubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubCaption);
                this.columnGLCode = new global::System.Data.DataColumn("GLCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLCode);
                this.columnGLDescription = new global::System.Data.DataColumn("GLDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLDescription);
                this.columnPreviousDate = new global::System.Data.DataColumn("PreviousDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousDate);
                this.columnCurrentDate = new global::System.Data.DataColumn("CurrentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDate);
                this.columnCurrentAmount = new global::System.Data.DataColumn("CurrentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmount);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnGrowth = new global::System.Data.DataColumn("Growth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrowth);
                this.columnpercentage = new global::System.Data.DataColumn("percentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercentage);
                this.columnMainCaption.MaxLength = 250;
                this.columnSubCaption.MaxLength = 200;
                this.columnSubSubCaption.MaxLength = 200;
                this.columnGLCode.MaxLength = 50;
                this.columnGLDescription.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow NewFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow() {
                return ((Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChanged != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChanged(this, new Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChanging != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChanging(this, new Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowDeleted != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowDeleted(this, new Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowDeleting != null)) {
                    this.Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowDeleting(this, new Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEvent(((Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFinstat_Report_BalancesheetOrPL_Gl_ComparisonRow(Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class finstat_Report_ManagementNotePLDataTable : global::System.Data.TypedTableBase<finstat_Report_ManagementNotePLRow> {
            
            private global::System.Data.DataColumn columnRunDate;
            
            private global::System.Data.DataColumn columnPreviousRunDate;
            
            private global::System.Data.DataColumn columnPreviousPreviousRunDate;
            
            private global::System.Data.DataColumn columnAveragerate;
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnSubCaption;
            
            private global::System.Data.DataColumn columnSubSubCaption;
            
            private global::System.Data.DataColumn columnSubPosition;
            
            private global::System.Data.DataColumn columnfintype;
            
            private global::System.Data.DataColumn columnfinsubtype;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnRefNote;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnYTDVariance;
            
            private global::System.Data.DataColumn columnYTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPreviousPreviousAmount;
            
            private global::System.Data.DataColumn columnMTD;
            
            private global::System.Data.DataColumn columnPrevMTD;
            
            private global::System.Data.DataColumn columnMTDVariance;
            
            private global::System.Data.DataColumn columnMTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPrevMONTH;
            
            private global::System.Data.DataColumn columnIsBold;
            
            private global::System.Data.DataColumn columnIsTotalLine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNotePLDataTable() {
                this.TableName = "finstat_Report_ManagementNotePL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_ManagementNotePLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected finstat_Report_ManagementNotePLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RunDateColumn {
                get {
                    return this.columnRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousRunDateColumn {
                get {
                    return this.columnPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousRunDateColumn {
                get {
                    return this.columnPreviousPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AveragerateColumn {
                get {
                    return this.columnAveragerate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubCaptionColumn {
                get {
                    return this.columnSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubSubCaptionColumn {
                get {
                    return this.columnSubSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubPositionColumn {
                get {
                    return this.columnSubPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fintypeColumn {
                get {
                    return this.columnfintype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn finsubtypeColumn {
                get {
                    return this.columnfinsubtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefNoteColumn {
                get {
                    return this.columnRefNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVarianceColumn {
                get {
                    return this.columnYTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVariancePercentageColumn {
                get {
                    return this.columnYTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousAmountColumn {
                get {
                    return this.columnPreviousPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDColumn {
                get {
                    return this.columnMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMTDColumn {
                get {
                    return this.columnPrevMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVarianceColumn {
                get {
                    return this.columnMTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVariancePercentageColumn {
                get {
                    return this.columnMTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMONTHColumn {
                get {
                    return this.columnPrevMONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsBoldColumn {
                get {
                    return this.columnIsBold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsTotalLineColumn {
                get {
                    return this.columnIsTotalLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNotePLRow this[int index] {
                get {
                    return ((finstat_Report_ManagementNotePLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNotePLRowChangeEventHandler finstat_Report_ManagementNotePLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNotePLRowChangeEventHandler finstat_Report_ManagementNotePLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNotePLRowChangeEventHandler finstat_Report_ManagementNotePLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_ManagementNotePLRowChangeEventHandler finstat_Report_ManagementNotePLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addfinstat_Report_ManagementNotePLRow(finstat_Report_ManagementNotePLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNotePLRow Addfinstat_Report_ManagementNotePLRow(
                        System.DateTime RunDate, 
                        System.DateTime PreviousRunDate, 
                        System.DateTime PreviousPreviousRunDate, 
                        double Averagerate, 
                        string MainCaption, 
                        string SubCaption, 
                        string SubSubCaption, 
                        int SubPosition, 
                        string fintype, 
                        string finsubtype, 
                        int Position, 
                        string RefNote, 
                        decimal Amount, 
                        decimal PreviousAmount, 
                        decimal YTDVariance, 
                        decimal YTDVariancePercentage, 
                        decimal PreviousPreviousAmount, 
                        decimal MTD, 
                        decimal PrevMTD, 
                        decimal MTDVariance, 
                        decimal MTDVariancePercentage, 
                        decimal PrevMONTH, 
                        long IsBold, 
                        long IsTotalLine) {
                finstat_Report_ManagementNotePLRow rowfinstat_Report_ManagementNotePLRow = ((finstat_Report_ManagementNotePLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RunDate,
                        PreviousRunDate,
                        PreviousPreviousRunDate,
                        Averagerate,
                        MainCaption,
                        SubCaption,
                        SubSubCaption,
                        SubPosition,
                        fintype,
                        finsubtype,
                        Position,
                        RefNote,
                        Amount,
                        PreviousAmount,
                        YTDVariance,
                        YTDVariancePercentage,
                        PreviousPreviousAmount,
                        MTD,
                        PrevMTD,
                        MTDVariance,
                        MTDVariancePercentage,
                        PrevMONTH,
                        IsBold,
                        IsTotalLine};
                rowfinstat_Report_ManagementNotePLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfinstat_Report_ManagementNotePLRow);
                return rowfinstat_Report_ManagementNotePLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                finstat_Report_ManagementNotePLDataTable cln = ((finstat_Report_ManagementNotePLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new finstat_Report_ManagementNotePLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRunDate = base.Columns["RunDate"];
                this.columnPreviousRunDate = base.Columns["PreviousRunDate"];
                this.columnPreviousPreviousRunDate = base.Columns["PreviousPreviousRunDate"];
                this.columnAveragerate = base.Columns["Averagerate"];
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnSubCaption = base.Columns["SubCaption"];
                this.columnSubSubCaption = base.Columns["SubSubCaption"];
                this.columnSubPosition = base.Columns["SubPosition"];
                this.columnfintype = base.Columns["fintype"];
                this.columnfinsubtype = base.Columns["finsubtype"];
                this.columnPosition = base.Columns["Position"];
                this.columnRefNote = base.Columns["RefNote"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnYTDVariance = base.Columns["YTDVariance"];
                this.columnYTDVariancePercentage = base.Columns["YTDVariancePercentage"];
                this.columnPreviousPreviousAmount = base.Columns["PreviousPreviousAmount"];
                this.columnMTD = base.Columns["MTD"];
                this.columnPrevMTD = base.Columns["PrevMTD"];
                this.columnMTDVariance = base.Columns["MTDVariance"];
                this.columnMTDVariancePercentage = base.Columns["MTDVariancePercentage"];
                this.columnPrevMONTH = base.Columns["PrevMONTH"];
                this.columnIsBold = base.Columns["IsBold"];
                this.columnIsTotalLine = base.Columns["IsTotalLine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRunDate = new global::System.Data.DataColumn("RunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDate);
                this.columnPreviousRunDate = new global::System.Data.DataColumn("PreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousRunDate);
                this.columnPreviousPreviousRunDate = new global::System.Data.DataColumn("PreviousPreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousRunDate);
                this.columnAveragerate = new global::System.Data.DataColumn("Averagerate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveragerate);
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnSubCaption = new global::System.Data.DataColumn("SubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCaption);
                this.columnSubSubCaption = new global::System.Data.DataColumn("SubSubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubCaption);
                this.columnSubPosition = new global::System.Data.DataColumn("SubPosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubPosition);
                this.columnfintype = new global::System.Data.DataColumn("fintype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfintype);
                this.columnfinsubtype = new global::System.Data.DataColumn("finsubtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinsubtype);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnRefNote = new global::System.Data.DataColumn("RefNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNote);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnYTDVariance = new global::System.Data.DataColumn("YTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariance);
                this.columnYTDVariancePercentage = new global::System.Data.DataColumn("YTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariancePercentage);
                this.columnPreviousPreviousAmount = new global::System.Data.DataColumn("PreviousPreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousAmount);
                this.columnMTD = new global::System.Data.DataColumn("MTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTD);
                this.columnPrevMTD = new global::System.Data.DataColumn("PrevMTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMTD);
                this.columnMTDVariance = new global::System.Data.DataColumn("MTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariance);
                this.columnMTDVariancePercentage = new global::System.Data.DataColumn("MTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariancePercentage);
                this.columnPrevMONTH = new global::System.Data.DataColumn("PrevMONTH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMONTH);
                this.columnIsBold = new global::System.Data.DataColumn("IsBold", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBold);
                this.columnIsTotalLine = new global::System.Data.DataColumn("IsTotalLine", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTotalLine);
                this.columnMainCaption.MaxLength = 250;
                this.columnSubCaption.MaxLength = 250;
                this.columnSubSubCaption.MaxLength = 250;
                this.columnfintype.MaxLength = 5;
                this.columnfinsubtype.MaxLength = 50;
                this.columnRefNote.MaxLength = 5;
                this.columnYTDVariance.AllowDBNull = false;
                this.columnMTDVariance.AllowDBNull = false;
                this.columnIsBold.AllowDBNull = false;
                this.columnIsTotalLine.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNotePLRow Newfinstat_Report_ManagementNotePLRow() {
                return ((finstat_Report_ManagementNotePLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new finstat_Report_ManagementNotePLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(finstat_Report_ManagementNotePLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.finstat_Report_ManagementNotePLRowChanged != null)) {
                    this.finstat_Report_ManagementNotePLRowChanged(this, new finstat_Report_ManagementNotePLRowChangeEvent(((finstat_Report_ManagementNotePLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.finstat_Report_ManagementNotePLRowChanging != null)) {
                    this.finstat_Report_ManagementNotePLRowChanging(this, new finstat_Report_ManagementNotePLRowChangeEvent(((finstat_Report_ManagementNotePLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.finstat_Report_ManagementNotePLRowDeleted != null)) {
                    this.finstat_Report_ManagementNotePLRowDeleted(this, new finstat_Report_ManagementNotePLRowChangeEvent(((finstat_Report_ManagementNotePLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.finstat_Report_ManagementNotePLRowDeleting != null)) {
                    this.finstat_Report_ManagementNotePLRowDeleting(this, new finstat_Report_ManagementNotePLRowChangeEvent(((finstat_Report_ManagementNotePLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removefinstat_Report_ManagementNotePLRow(finstat_Report_ManagementNotePLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "finstat_Report_ManagementNotePLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class finstat_Report_BalancesheetOrPL_GlDataTable : global::System.Data.TypedTableBase<finstat_Report_BalancesheetOrPL_GlRow> {
            
            private global::System.Data.DataColumn columnRunDate;
            
            private global::System.Data.DataColumn columnPreviousRunDate;
            
            private global::System.Data.DataColumn columnPreviousPreviousRunDate;
            
            private global::System.Data.DataColumn columnAveragerate;
            
            private global::System.Data.DataColumn columnGlCode;
            
            private global::System.Data.DataColumn columnGlDescription;
            
            private global::System.Data.DataColumn columnGlSubCode;
            
            private global::System.Data.DataColumn columnCompanyCode;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnYTDVariance;
            
            private global::System.Data.DataColumn columnYTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPreviousPreviousAmount;
            
            private global::System.Data.DataColumn columnMTD;
            
            private global::System.Data.DataColumn columnPrevMTD;
            
            private global::System.Data.DataColumn columnMTDVariance;
            
            private global::System.Data.DataColumn columnMTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPrevMONTH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_GlDataTable() {
                this.TableName = "finstat_Report_BalancesheetOrPL_Gl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_BalancesheetOrPL_GlDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected finstat_Report_BalancesheetOrPL_GlDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RunDateColumn {
                get {
                    return this.columnRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousRunDateColumn {
                get {
                    return this.columnPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousRunDateColumn {
                get {
                    return this.columnPreviousPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AveragerateColumn {
                get {
                    return this.columnAveragerate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GlCodeColumn {
                get {
                    return this.columnGlCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GlDescriptionColumn {
                get {
                    return this.columnGlDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GlSubCodeColumn {
                get {
                    return this.columnGlSubCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CompanyCodeColumn {
                get {
                    return this.columnCompanyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVarianceColumn {
                get {
                    return this.columnYTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVariancePercentageColumn {
                get {
                    return this.columnYTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousAmountColumn {
                get {
                    return this.columnPreviousPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDColumn {
                get {
                    return this.columnMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMTDColumn {
                get {
                    return this.columnPrevMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVarianceColumn {
                get {
                    return this.columnMTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVariancePercentageColumn {
                get {
                    return this.columnMTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMONTHColumn {
                get {
                    return this.columnPrevMONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_GlRow this[int index] {
                get {
                    return ((finstat_Report_BalancesheetOrPL_GlRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_GlRowChangeEventHandler finstat_Report_BalancesheetOrPL_GlRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_GlRowChangeEventHandler finstat_Report_BalancesheetOrPL_GlRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_GlRowChangeEventHandler finstat_Report_BalancesheetOrPL_GlRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_GlRowChangeEventHandler finstat_Report_BalancesheetOrPL_GlRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addfinstat_Report_BalancesheetOrPL_GlRow(finstat_Report_BalancesheetOrPL_GlRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_GlRow Addfinstat_Report_BalancesheetOrPL_GlRow(
                        System.DateTime RunDate, 
                        System.DateTime PreviousRunDate, 
                        System.DateTime PreviousPreviousRunDate, 
                        double Averagerate, 
                        string GlCode, 
                        string GlDescription, 
                        string GlSubCode, 
                        string CompanyCode, 
                        decimal Amount, 
                        decimal PreviousAmount, 
                        decimal YTDVariance, 
                        decimal YTDVariancePercentage, 
                        decimal PreviousPreviousAmount, 
                        decimal MTD, 
                        decimal PrevMTD, 
                        decimal MTDVariance, 
                        decimal MTDVariancePercentage, 
                        decimal PrevMONTH) {
                finstat_Report_BalancesheetOrPL_GlRow rowfinstat_Report_BalancesheetOrPL_GlRow = ((finstat_Report_BalancesheetOrPL_GlRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RunDate,
                        PreviousRunDate,
                        PreviousPreviousRunDate,
                        Averagerate,
                        GlCode,
                        GlDescription,
                        GlSubCode,
                        CompanyCode,
                        Amount,
                        PreviousAmount,
                        YTDVariance,
                        YTDVariancePercentage,
                        PreviousPreviousAmount,
                        MTD,
                        PrevMTD,
                        MTDVariance,
                        MTDVariancePercentage,
                        PrevMONTH};
                rowfinstat_Report_BalancesheetOrPL_GlRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfinstat_Report_BalancesheetOrPL_GlRow);
                return rowfinstat_Report_BalancesheetOrPL_GlRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                finstat_Report_BalancesheetOrPL_GlDataTable cln = ((finstat_Report_BalancesheetOrPL_GlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new finstat_Report_BalancesheetOrPL_GlDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRunDate = base.Columns["RunDate"];
                this.columnPreviousRunDate = base.Columns["PreviousRunDate"];
                this.columnPreviousPreviousRunDate = base.Columns["PreviousPreviousRunDate"];
                this.columnAveragerate = base.Columns["Averagerate"];
                this.columnGlCode = base.Columns["GlCode"];
                this.columnGlDescription = base.Columns["GlDescription"];
                this.columnGlSubCode = base.Columns["GlSubCode"];
                this.columnCompanyCode = base.Columns["CompanyCode"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnYTDVariance = base.Columns["YTDVariance"];
                this.columnYTDVariancePercentage = base.Columns["YTDVariancePercentage"];
                this.columnPreviousPreviousAmount = base.Columns["PreviousPreviousAmount"];
                this.columnMTD = base.Columns["MTD"];
                this.columnPrevMTD = base.Columns["PrevMTD"];
                this.columnMTDVariance = base.Columns["MTDVariance"];
                this.columnMTDVariancePercentage = base.Columns["MTDVariancePercentage"];
                this.columnPrevMONTH = base.Columns["PrevMONTH"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRunDate = new global::System.Data.DataColumn("RunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDate);
                this.columnPreviousRunDate = new global::System.Data.DataColumn("PreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousRunDate);
                this.columnPreviousPreviousRunDate = new global::System.Data.DataColumn("PreviousPreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousRunDate);
                this.columnAveragerate = new global::System.Data.DataColumn("Averagerate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveragerate);
                this.columnGlCode = new global::System.Data.DataColumn("GlCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlCode);
                this.columnGlDescription = new global::System.Data.DataColumn("GlDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlDescription);
                this.columnGlSubCode = new global::System.Data.DataColumn("GlSubCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlSubCode);
                this.columnCompanyCode = new global::System.Data.DataColumn("CompanyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCode);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnYTDVariance = new global::System.Data.DataColumn("YTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariance);
                this.columnYTDVariancePercentage = new global::System.Data.DataColumn("YTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariancePercentage);
                this.columnPreviousPreviousAmount = new global::System.Data.DataColumn("PreviousPreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousAmount);
                this.columnMTD = new global::System.Data.DataColumn("MTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTD);
                this.columnPrevMTD = new global::System.Data.DataColumn("PrevMTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMTD);
                this.columnMTDVariance = new global::System.Data.DataColumn("MTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariance);
                this.columnMTDVariancePercentage = new global::System.Data.DataColumn("MTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariancePercentage);
                this.columnPrevMONTH = new global::System.Data.DataColumn("PrevMONTH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMONTH);
                this.columnGlCode.MaxLength = 30;
                this.columnGlDescription.MaxLength = 250;
                this.columnGlSubCode.MaxLength = 30;
                this.columnCompanyCode.MaxLength = 10;
                this.columnYTDVariance.AllowDBNull = false;
                this.columnMTDVariance.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_GlRow Newfinstat_Report_BalancesheetOrPL_GlRow() {
                return ((finstat_Report_BalancesheetOrPL_GlRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new finstat_Report_BalancesheetOrPL_GlRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(finstat_Report_BalancesheetOrPL_GlRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.finstat_Report_BalancesheetOrPL_GlRowChanged != null)) {
                    this.finstat_Report_BalancesheetOrPL_GlRowChanged(this, new finstat_Report_BalancesheetOrPL_GlRowChangeEvent(((finstat_Report_BalancesheetOrPL_GlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.finstat_Report_BalancesheetOrPL_GlRowChanging != null)) {
                    this.finstat_Report_BalancesheetOrPL_GlRowChanging(this, new finstat_Report_BalancesheetOrPL_GlRowChangeEvent(((finstat_Report_BalancesheetOrPL_GlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.finstat_Report_BalancesheetOrPL_GlRowDeleted != null)) {
                    this.finstat_Report_BalancesheetOrPL_GlRowDeleted(this, new finstat_Report_BalancesheetOrPL_GlRowChangeEvent(((finstat_Report_BalancesheetOrPL_GlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.finstat_Report_BalancesheetOrPL_GlRowDeleting != null)) {
                    this.finstat_Report_BalancesheetOrPL_GlRowDeleting(this, new finstat_Report_BalancesheetOrPL_GlRowChangeEvent(((finstat_Report_BalancesheetOrPL_GlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removefinstat_Report_BalancesheetOrPL_GlRow(finstat_Report_BalancesheetOrPL_GlRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "finstat_Report_BalancesheetOrPL_GlDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class finstat_Report_BalancesheetOrPLDataTable : global::System.Data.TypedTableBase<finstat_Report_BalancesheetOrPLRow> {
            
            private global::System.Data.DataColumn columnRunDate;
            
            private global::System.Data.DataColumn columnPreviousRunDate;
            
            private global::System.Data.DataColumn columnPreviousPreviousRunDate;
            
            private global::System.Data.DataColumn columnAveragerate;
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnfintype;
            
            private global::System.Data.DataColumn columnfinsubtype;
            
            private global::System.Data.DataColumn columnTotalLine;
            
            private global::System.Data.DataColumn columnrefnote;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columnReportColor;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnYTDVariance;
            
            private global::System.Data.DataColumn columnYTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPreviousPreviousAmount;
            
            private global::System.Data.DataColumn columnMTD;
            
            private global::System.Data.DataColumn columnPrevMTD;
            
            private global::System.Data.DataColumn columnMTDVariance;
            
            private global::System.Data.DataColumn columnMTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPrevMONTH;
            
            private global::System.Data.DataColumn columnBudgetYTD;
            
            private global::System.Data.DataColumn columnBudgetMTD;
            
            private global::System.Data.DataColumn columnMTDAchieved;
            
            private global::System.Data.DataColumn columnYTDAchieved;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPLDataTable() {
                this.TableName = "finstat_Report_BalancesheetOrPL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_BalancesheetOrPLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected finstat_Report_BalancesheetOrPLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RunDateColumn {
                get {
                    return this.columnRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousRunDateColumn {
                get {
                    return this.columnPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousRunDateColumn {
                get {
                    return this.columnPreviousPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AveragerateColumn {
                get {
                    return this.columnAveragerate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fintypeColumn {
                get {
                    return this.columnfintype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn finsubtypeColumn {
                get {
                    return this.columnfinsubtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalLineColumn {
                get {
                    return this.columnTotalLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn refnoteColumn {
                get {
                    return this.columnrefnote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReportColorColumn {
                get {
                    return this.columnReportColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVarianceColumn {
                get {
                    return this.columnYTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVariancePercentageColumn {
                get {
                    return this.columnYTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousAmountColumn {
                get {
                    return this.columnPreviousPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDColumn {
                get {
                    return this.columnMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMTDColumn {
                get {
                    return this.columnPrevMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVarianceColumn {
                get {
                    return this.columnMTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVariancePercentageColumn {
                get {
                    return this.columnMTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMONTHColumn {
                get {
                    return this.columnPrevMONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BudgetYTDColumn {
                get {
                    return this.columnBudgetYTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BudgetMTDColumn {
                get {
                    return this.columnBudgetMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDAchievedColumn {
                get {
                    return this.columnMTDAchieved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDAchievedColumn {
                get {
                    return this.columnYTDAchieved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPLRow this[int index] {
                get {
                    return ((finstat_Report_BalancesheetOrPLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPLRowChangeEventHandler finstat_Report_BalancesheetOrPLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPLRowChangeEventHandler finstat_Report_BalancesheetOrPLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPLRowChangeEventHandler finstat_Report_BalancesheetOrPLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPLRowChangeEventHandler finstat_Report_BalancesheetOrPLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addfinstat_Report_BalancesheetOrPLRow(finstat_Report_BalancesheetOrPLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPLRow Addfinstat_Report_BalancesheetOrPLRow(
                        System.DateTime RunDate, 
                        System.DateTime PreviousRunDate, 
                        System.DateTime PreviousPreviousRunDate, 
                        double Averagerate, 
                        string MainCaption, 
                        string fintype, 
                        string finsubtype, 
                        string TotalLine, 
                        string refnote, 
                        int position, 
                        string ReportColor, 
                        decimal Amount, 
                        decimal PreviousAmount, 
                        decimal YTDVariance, 
                        decimal YTDVariancePercentage, 
                        decimal PreviousPreviousAmount, 
                        decimal MTD, 
                        decimal PrevMTD, 
                        decimal MTDVariance, 
                        decimal MTDVariancePercentage, 
                        decimal PrevMONTH, 
                        decimal BudgetYTD, 
                        decimal BudgetMTD, 
                        decimal MTDAchieved, 
                        decimal YTDAchieved) {
                finstat_Report_BalancesheetOrPLRow rowfinstat_Report_BalancesheetOrPLRow = ((finstat_Report_BalancesheetOrPLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RunDate,
                        PreviousRunDate,
                        PreviousPreviousRunDate,
                        Averagerate,
                        MainCaption,
                        fintype,
                        finsubtype,
                        TotalLine,
                        refnote,
                        position,
                        ReportColor,
                        Amount,
                        PreviousAmount,
                        YTDVariance,
                        YTDVariancePercentage,
                        PreviousPreviousAmount,
                        MTD,
                        PrevMTD,
                        MTDVariance,
                        MTDVariancePercentage,
                        PrevMONTH,
                        BudgetYTD,
                        BudgetMTD,
                        MTDAchieved,
                        YTDAchieved};
                rowfinstat_Report_BalancesheetOrPLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfinstat_Report_BalancesheetOrPLRow);
                return rowfinstat_Report_BalancesheetOrPLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                finstat_Report_BalancesheetOrPLDataTable cln = ((finstat_Report_BalancesheetOrPLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new finstat_Report_BalancesheetOrPLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRunDate = base.Columns["RunDate"];
                this.columnPreviousRunDate = base.Columns["PreviousRunDate"];
                this.columnPreviousPreviousRunDate = base.Columns["PreviousPreviousRunDate"];
                this.columnAveragerate = base.Columns["Averagerate"];
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnfintype = base.Columns["fintype"];
                this.columnfinsubtype = base.Columns["finsubtype"];
                this.columnTotalLine = base.Columns["TotalLine"];
                this.columnrefnote = base.Columns["refnote"];
                this.columnposition = base.Columns["position"];
                this.columnReportColor = base.Columns["ReportColor"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnYTDVariance = base.Columns["YTDVariance"];
                this.columnYTDVariancePercentage = base.Columns["YTDVariancePercentage"];
                this.columnPreviousPreviousAmount = base.Columns["PreviousPreviousAmount"];
                this.columnMTD = base.Columns["MTD"];
                this.columnPrevMTD = base.Columns["PrevMTD"];
                this.columnMTDVariance = base.Columns["MTDVariance"];
                this.columnMTDVariancePercentage = base.Columns["MTDVariancePercentage"];
                this.columnPrevMONTH = base.Columns["PrevMONTH"];
                this.columnBudgetYTD = base.Columns["BudgetYTD"];
                this.columnBudgetMTD = base.Columns["BudgetMTD"];
                this.columnMTDAchieved = base.Columns["MTDAchieved"];
                this.columnYTDAchieved = base.Columns["YTDAchieved"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRunDate = new global::System.Data.DataColumn("RunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDate);
                this.columnPreviousRunDate = new global::System.Data.DataColumn("PreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousRunDate);
                this.columnPreviousPreviousRunDate = new global::System.Data.DataColumn("PreviousPreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousRunDate);
                this.columnAveragerate = new global::System.Data.DataColumn("Averagerate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveragerate);
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnfintype = new global::System.Data.DataColumn("fintype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfintype);
                this.columnfinsubtype = new global::System.Data.DataColumn("finsubtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinsubtype);
                this.columnTotalLine = new global::System.Data.DataColumn("TotalLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLine);
                this.columnrefnote = new global::System.Data.DataColumn("refnote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefnote);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnReportColor = new global::System.Data.DataColumn("ReportColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportColor);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnYTDVariance = new global::System.Data.DataColumn("YTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariance);
                this.columnYTDVariancePercentage = new global::System.Data.DataColumn("YTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariancePercentage);
                this.columnPreviousPreviousAmount = new global::System.Data.DataColumn("PreviousPreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousAmount);
                this.columnMTD = new global::System.Data.DataColumn("MTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTD);
                this.columnPrevMTD = new global::System.Data.DataColumn("PrevMTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMTD);
                this.columnMTDVariance = new global::System.Data.DataColumn("MTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariance);
                this.columnMTDVariancePercentage = new global::System.Data.DataColumn("MTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariancePercentage);
                this.columnPrevMONTH = new global::System.Data.DataColumn("PrevMONTH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMONTH);
                this.columnBudgetYTD = new global::System.Data.DataColumn("BudgetYTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetYTD);
                this.columnBudgetMTD = new global::System.Data.DataColumn("BudgetMTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetMTD);
                this.columnMTDAchieved = new global::System.Data.DataColumn("MTDAchieved", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDAchieved);
                this.columnYTDAchieved = new global::System.Data.DataColumn("YTDAchieved", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDAchieved);
                this.columnMainCaption.MaxLength = 250;
                this.columnfintype.MaxLength = 5;
                this.columnfinsubtype.MaxLength = 50;
                this.columnTotalLine.MaxLength = 5;
                this.columnrefnote.MaxLength = 5;
                this.columnReportColor.MaxLength = 20;
                this.columnYTDVariance.AllowDBNull = false;
                this.columnMTDVariance.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPLRow Newfinstat_Report_BalancesheetOrPLRow() {
                return ((finstat_Report_BalancesheetOrPLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new finstat_Report_BalancesheetOrPLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(finstat_Report_BalancesheetOrPLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.finstat_Report_BalancesheetOrPLRowChanged != null)) {
                    this.finstat_Report_BalancesheetOrPLRowChanged(this, new finstat_Report_BalancesheetOrPLRowChangeEvent(((finstat_Report_BalancesheetOrPLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.finstat_Report_BalancesheetOrPLRowChanging != null)) {
                    this.finstat_Report_BalancesheetOrPLRowChanging(this, new finstat_Report_BalancesheetOrPLRowChangeEvent(((finstat_Report_BalancesheetOrPLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.finstat_Report_BalancesheetOrPLRowDeleted != null)) {
                    this.finstat_Report_BalancesheetOrPLRowDeleted(this, new finstat_Report_BalancesheetOrPLRowChangeEvent(((finstat_Report_BalancesheetOrPLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.finstat_Report_BalancesheetOrPLRowDeleting != null)) {
                    this.finstat_Report_BalancesheetOrPLRowDeleting(this, new finstat_Report_BalancesheetOrPLRowChangeEvent(((finstat_Report_BalancesheetOrPLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removefinstat_Report_BalancesheetOrPLRow(finstat_Report_BalancesheetOrPLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "finstat_Report_BalancesheetOrPLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class finstat_Report_BalancesheetOrPL_SubDataTable : global::System.Data.TypedTableBase<finstat_Report_BalancesheetOrPL_SubRow> {
            
            private global::System.Data.DataColumn columnRunDate;
            
            private global::System.Data.DataColumn columnPreviousRunDate;
            
            private global::System.Data.DataColumn columnPreviousPreviousRunDate;
            
            private global::System.Data.DataColumn columnAveragerate;
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnSubCaption;
            
            private global::System.Data.DataColumn columnSubPosition;
            
            private global::System.Data.DataColumn columnfintype;
            
            private global::System.Data.DataColumn columnfinsubtype;
            
            private global::System.Data.DataColumn columnposition;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnYTDVariance;
            
            private global::System.Data.DataColumn columnYTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPreviousPreviousAmount;
            
            private global::System.Data.DataColumn columnMTD;
            
            private global::System.Data.DataColumn columnPrevMTD;
            
            private global::System.Data.DataColumn columnMTDVariance;
            
            private global::System.Data.DataColumn columnMTDVariancePercentage;
            
            private global::System.Data.DataColumn columnPrevMONTH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_SubDataTable() {
                this.TableName = "finstat_Report_BalancesheetOrPL_Sub";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_BalancesheetOrPL_SubDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected finstat_Report_BalancesheetOrPL_SubDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RunDateColumn {
                get {
                    return this.columnRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousRunDateColumn {
                get {
                    return this.columnPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousRunDateColumn {
                get {
                    return this.columnPreviousPreviousRunDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AveragerateColumn {
                get {
                    return this.columnAveragerate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubCaptionColumn {
                get {
                    return this.columnSubCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubPositionColumn {
                get {
                    return this.columnSubPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fintypeColumn {
                get {
                    return this.columnfintype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn finsubtypeColumn {
                get {
                    return this.columnfinsubtype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVarianceColumn {
                get {
                    return this.columnYTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YTDVariancePercentageColumn {
                get {
                    return this.columnYTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousPreviousAmountColumn {
                get {
                    return this.columnPreviousPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDColumn {
                get {
                    return this.columnMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMTDColumn {
                get {
                    return this.columnPrevMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVarianceColumn {
                get {
                    return this.columnMTDVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MTDVariancePercentageColumn {
                get {
                    return this.columnMTDVariancePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PrevMONTHColumn {
                get {
                    return this.columnPrevMONTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_SubRow this[int index] {
                get {
                    return ((finstat_Report_BalancesheetOrPL_SubRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_SubRowChangeEventHandler finstat_Report_BalancesheetOrPL_SubRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_SubRowChangeEventHandler finstat_Report_BalancesheetOrPL_SubRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_SubRowChangeEventHandler finstat_Report_BalancesheetOrPL_SubRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event finstat_Report_BalancesheetOrPL_SubRowChangeEventHandler finstat_Report_BalancesheetOrPL_SubRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Addfinstat_Report_BalancesheetOrPL_SubRow(finstat_Report_BalancesheetOrPL_SubRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_SubRow Addfinstat_Report_BalancesheetOrPL_SubRow(
                        System.DateTime RunDate, 
                        System.DateTime PreviousRunDate, 
                        System.DateTime PreviousPreviousRunDate, 
                        double Averagerate, 
                        string MainCaption, 
                        string SubCaption, 
                        int SubPosition, 
                        string fintype, 
                        string finsubtype, 
                        int position, 
                        decimal Amount, 
                        decimal PreviousAmount, 
                        decimal YTDVariance, 
                        decimal YTDVariancePercentage, 
                        decimal PreviousPreviousAmount, 
                        decimal MTD, 
                        decimal PrevMTD, 
                        decimal MTDVariance, 
                        decimal MTDVariancePercentage, 
                        decimal PrevMONTH) {
                finstat_Report_BalancesheetOrPL_SubRow rowfinstat_Report_BalancesheetOrPL_SubRow = ((finstat_Report_BalancesheetOrPL_SubRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RunDate,
                        PreviousRunDate,
                        PreviousPreviousRunDate,
                        Averagerate,
                        MainCaption,
                        SubCaption,
                        SubPosition,
                        fintype,
                        finsubtype,
                        position,
                        Amount,
                        PreviousAmount,
                        YTDVariance,
                        YTDVariancePercentage,
                        PreviousPreviousAmount,
                        MTD,
                        PrevMTD,
                        MTDVariance,
                        MTDVariancePercentage,
                        PrevMONTH};
                rowfinstat_Report_BalancesheetOrPL_SubRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfinstat_Report_BalancesheetOrPL_SubRow);
                return rowfinstat_Report_BalancesheetOrPL_SubRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                finstat_Report_BalancesheetOrPL_SubDataTable cln = ((finstat_Report_BalancesheetOrPL_SubDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new finstat_Report_BalancesheetOrPL_SubDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRunDate = base.Columns["RunDate"];
                this.columnPreviousRunDate = base.Columns["PreviousRunDate"];
                this.columnPreviousPreviousRunDate = base.Columns["PreviousPreviousRunDate"];
                this.columnAveragerate = base.Columns["Averagerate"];
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnSubCaption = base.Columns["SubCaption"];
                this.columnSubPosition = base.Columns["SubPosition"];
                this.columnfintype = base.Columns["fintype"];
                this.columnfinsubtype = base.Columns["finsubtype"];
                this.columnposition = base.Columns["position"];
                this.columnAmount = base.Columns["Amount"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnYTDVariance = base.Columns["YTDVariance"];
                this.columnYTDVariancePercentage = base.Columns["YTDVariancePercentage"];
                this.columnPreviousPreviousAmount = base.Columns["PreviousPreviousAmount"];
                this.columnMTD = base.Columns["MTD"];
                this.columnPrevMTD = base.Columns["PrevMTD"];
                this.columnMTDVariance = base.Columns["MTDVariance"];
                this.columnMTDVariancePercentage = base.Columns["MTDVariancePercentage"];
                this.columnPrevMONTH = base.Columns["PrevMONTH"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRunDate = new global::System.Data.DataColumn("RunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRunDate);
                this.columnPreviousRunDate = new global::System.Data.DataColumn("PreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousRunDate);
                this.columnPreviousPreviousRunDate = new global::System.Data.DataColumn("PreviousPreviousRunDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousRunDate);
                this.columnAveragerate = new global::System.Data.DataColumn("Averagerate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveragerate);
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnSubCaption = new global::System.Data.DataColumn("SubCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCaption);
                this.columnSubPosition = new global::System.Data.DataColumn("SubPosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubPosition);
                this.columnfintype = new global::System.Data.DataColumn("fintype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfintype);
                this.columnfinsubtype = new global::System.Data.DataColumn("finsubtype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinsubtype);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnYTDVariance = new global::System.Data.DataColumn("YTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariance);
                this.columnYTDVariancePercentage = new global::System.Data.DataColumn("YTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYTDVariancePercentage);
                this.columnPreviousPreviousAmount = new global::System.Data.DataColumn("PreviousPreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousPreviousAmount);
                this.columnMTD = new global::System.Data.DataColumn("MTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTD);
                this.columnPrevMTD = new global::System.Data.DataColumn("PrevMTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMTD);
                this.columnMTDVariance = new global::System.Data.DataColumn("MTDVariance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariance);
                this.columnMTDVariancePercentage = new global::System.Data.DataColumn("MTDVariancePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTDVariancePercentage);
                this.columnPrevMONTH = new global::System.Data.DataColumn("PrevMONTH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevMONTH);
                this.columnMainCaption.MaxLength = 250;
                this.columnSubCaption.MaxLength = 250;
                this.columnfintype.MaxLength = 5;
                this.columnfinsubtype.MaxLength = 50;
                this.columnYTDVariance.AllowDBNull = false;
                this.columnMTDVariance.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_SubRow Newfinstat_Report_BalancesheetOrPL_SubRow() {
                return ((finstat_Report_BalancesheetOrPL_SubRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new finstat_Report_BalancesheetOrPL_SubRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(finstat_Report_BalancesheetOrPL_SubRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.finstat_Report_BalancesheetOrPL_SubRowChanged != null)) {
                    this.finstat_Report_BalancesheetOrPL_SubRowChanged(this, new finstat_Report_BalancesheetOrPL_SubRowChangeEvent(((finstat_Report_BalancesheetOrPL_SubRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.finstat_Report_BalancesheetOrPL_SubRowChanging != null)) {
                    this.finstat_Report_BalancesheetOrPL_SubRowChanging(this, new finstat_Report_BalancesheetOrPL_SubRowChangeEvent(((finstat_Report_BalancesheetOrPL_SubRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.finstat_Report_BalancesheetOrPL_SubRowDeleted != null)) {
                    this.finstat_Report_BalancesheetOrPL_SubRowDeleted(this, new finstat_Report_BalancesheetOrPL_SubRowChangeEvent(((finstat_Report_BalancesheetOrPL_SubRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.finstat_Report_BalancesheetOrPL_SubRowDeleting != null)) {
                    this.finstat_Report_BalancesheetOrPL_SubRowDeleting(this, new finstat_Report_BalancesheetOrPL_SubRowChangeEvent(((finstat_Report_BalancesheetOrPL_SubRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removefinstat_Report_BalancesheetOrPL_SubRow(finstat_Report_BalancesheetOrPL_SubRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "finstat_Report_BalancesheetOrPL_SubDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetReport_DivisorDataTable : global::System.Data.TypedTableBase<GetReport_DivisorRow> {
            
            private global::System.Data.DataColumn columndivisor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_DivisorDataTable() {
                this.TableName = "GetReport_Divisor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GetReport_DivisorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected GetReport_DivisorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn divisorColumn {
                get {
                    return this.columndivisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_DivisorRow this[int index] {
                get {
                    return ((GetReport_DivisorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_DivisorRowChangeEventHandler GetReport_DivisorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_DivisorRowChangeEventHandler GetReport_DivisorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_DivisorRowChangeEventHandler GetReport_DivisorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event GetReport_DivisorRowChangeEventHandler GetReport_DivisorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddGetReport_DivisorRow(GetReport_DivisorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_DivisorRow AddGetReport_DivisorRow(string divisor) {
                GetReport_DivisorRow rowGetReport_DivisorRow = ((GetReport_DivisorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        divisor};
                rowGetReport_DivisorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetReport_DivisorRow);
                return rowGetReport_DivisorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetReport_DivisorDataTable cln = ((GetReport_DivisorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetReport_DivisorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columndivisor = base.Columns["divisor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columndivisor = new global::System.Data.DataColumn("divisor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndivisor);
                this.columndivisor.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_DivisorRow NewGetReport_DivisorRow() {
                return ((GetReport_DivisorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetReport_DivisorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetReport_DivisorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetReport_DivisorRowChanged != null)) {
                    this.GetReport_DivisorRowChanged(this, new GetReport_DivisorRowChangeEvent(((GetReport_DivisorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetReport_DivisorRowChanging != null)) {
                    this.GetReport_DivisorRowChanging(this, new GetReport_DivisorRowChangeEvent(((GetReport_DivisorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetReport_DivisorRowDeleted != null)) {
                    this.GetReport_DivisorRowDeleted(this, new GetReport_DivisorRowChangeEvent(((GetReport_DivisorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetReport_DivisorRowDeleting != null)) {
                    this.GetReport_DivisorRowDeleting(this, new GetReport_DivisorRowChangeEvent(((GetReport_DivisorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveGetReport_DivisorRow(GetReport_DivisorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetReport_DivisorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Finstat_Reports_QualitativeNotesDataTable : global::System.Data.TypedTableBase<Finstat_Reports_QualitativeNotesRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnTopNotes;
            
            private global::System.Data.DataColumn columnBottomNotes;
            
            private global::System.Data.DataColumn columnRundate;
            
            private global::System.Data.DataColumn columnReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Reports_QualitativeNotesDataTable() {
                this.TableName = "Finstat_Reports_QualitativeNotes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Reports_QualitativeNotesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Finstat_Reports_QualitativeNotesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TopNotesColumn {
                get {
                    return this.columnTopNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BottomNotesColumn {
                get {
                    return this.columnBottomNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RundateColumn {
                get {
                    return this.columnRundate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReportColumn {
                get {
                    return this.columnReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Reports_QualitativeNotesRow this[int index] {
                get {
                    return ((Finstat_Reports_QualitativeNotesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Reports_QualitativeNotesRowChangeEventHandler Finstat_Reports_QualitativeNotesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Reports_QualitativeNotesRowChangeEventHandler Finstat_Reports_QualitativeNotesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Reports_QualitativeNotesRowChangeEventHandler Finstat_Reports_QualitativeNotesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Reports_QualitativeNotesRowChangeEventHandler Finstat_Reports_QualitativeNotesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFinstat_Reports_QualitativeNotesRow(Finstat_Reports_QualitativeNotesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Reports_QualitativeNotesRow AddFinstat_Reports_QualitativeNotesRow(int id, string TopNotes, string BottomNotes, System.DateTime Rundate, string Report) {
                Finstat_Reports_QualitativeNotesRow rowFinstat_Reports_QualitativeNotesRow = ((Finstat_Reports_QualitativeNotesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        TopNotes,
                        BottomNotes,
                        Rundate,
                        Report};
                rowFinstat_Reports_QualitativeNotesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinstat_Reports_QualitativeNotesRow);
                return rowFinstat_Reports_QualitativeNotesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Reports_QualitativeNotesRow FindByRundateReport(System.DateTime Rundate, string Report) {
                return ((Finstat_Reports_QualitativeNotesRow)(this.Rows.Find(new object[] {
                            Rundate,
                            Report})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Finstat_Reports_QualitativeNotesDataTable cln = ((Finstat_Reports_QualitativeNotesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Finstat_Reports_QualitativeNotesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnTopNotes = base.Columns["TopNotes"];
                this.columnBottomNotes = base.Columns["BottomNotes"];
                this.columnRundate = base.Columns["Rundate"];
                this.columnReport = base.Columns["Report"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnTopNotes = new global::System.Data.DataColumn("TopNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopNotes);
                this.columnBottomNotes = new global::System.Data.DataColumn("BottomNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBottomNotes);
                this.columnRundate = new global::System.Data.DataColumn("Rundate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRundate);
                this.columnReport = new global::System.Data.DataColumn("Report", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReport);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRundate,
                                this.columnReport}, true));
                this.columnid.AllowDBNull = false;
                this.columnRundate.AllowDBNull = false;
                this.columnReport.AllowDBNull = false;
                this.columnReport.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Reports_QualitativeNotesRow NewFinstat_Reports_QualitativeNotesRow() {
                return ((Finstat_Reports_QualitativeNotesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Finstat_Reports_QualitativeNotesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Finstat_Reports_QualitativeNotesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Finstat_Reports_QualitativeNotesRowChanged != null)) {
                    this.Finstat_Reports_QualitativeNotesRowChanged(this, new Finstat_Reports_QualitativeNotesRowChangeEvent(((Finstat_Reports_QualitativeNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Finstat_Reports_QualitativeNotesRowChanging != null)) {
                    this.Finstat_Reports_QualitativeNotesRowChanging(this, new Finstat_Reports_QualitativeNotesRowChangeEvent(((Finstat_Reports_QualitativeNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Finstat_Reports_QualitativeNotesRowDeleted != null)) {
                    this.Finstat_Reports_QualitativeNotesRowDeleted(this, new Finstat_Reports_QualitativeNotesRowChangeEvent(((Finstat_Reports_QualitativeNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Finstat_Reports_QualitativeNotesRowDeleting != null)) {
                    this.Finstat_Reports_QualitativeNotesRowDeleting(this, new Finstat_Reports_QualitativeNotesRowChangeEvent(((Finstat_Reports_QualitativeNotesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFinstat_Reports_QualitativeNotesRow(Finstat_Reports_QualitativeNotesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Finstat_Reports_QualitativeNotesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Finstat_Report_BalancesheetOrPL_TrendDataTable : global::System.Data.TypedTableBase<Finstat_Report_BalancesheetOrPL_TrendRow> {
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnCurrentDate;
            
            private global::System.Data.DataColumn columnCurrentAmount;
            
            private global::System.Data.DataColumn columnRefNote;
            
            private global::System.Data.DataColumn columnClass;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnReportColor;
            
            private global::System.Data.DataColumn columnFinType;
            
            private global::System.Data.DataColumn columnTotalLine;
            
            private global::System.Data.DataColumn columnFinSubType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_TrendDataTable() {
                this.TableName = "Finstat_Report_BalancesheetOrPL_Trend";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_TrendDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Finstat_Report_BalancesheetOrPL_TrendDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentDateColumn {
                get {
                    return this.columnCurrentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountColumn {
                get {
                    return this.columnCurrentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefNoteColumn {
                get {
                    return this.columnRefNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReportColorColumn {
                get {
                    return this.columnReportColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FinTypeColumn {
                get {
                    return this.columnFinType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalLineColumn {
                get {
                    return this.columnTotalLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FinSubTypeColumn {
                get {
                    return this.columnFinSubType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_TrendRow this[int index] {
                get {
                    return ((Finstat_Report_BalancesheetOrPL_TrendRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_TrendRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_TrendRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_TrendRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_TrendRowChangeEventHandler Finstat_Report_BalancesheetOrPL_TrendRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFinstat_Report_BalancesheetOrPL_TrendRow(Finstat_Report_BalancesheetOrPL_TrendRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_TrendRow AddFinstat_Report_BalancesheetOrPL_TrendRow(string MainCaption, string CurrentDate, decimal CurrentAmount, string RefNote, int Class, int Position, string ReportColor, string FinType, sbyte TotalLine, string FinSubType) {
                Finstat_Report_BalancesheetOrPL_TrendRow rowFinstat_Report_BalancesheetOrPL_TrendRow = ((Finstat_Report_BalancesheetOrPL_TrendRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MainCaption,
                        CurrentDate,
                        CurrentAmount,
                        RefNote,
                        Class,
                        Position,
                        ReportColor,
                        FinType,
                        TotalLine,
                        FinSubType};
                rowFinstat_Report_BalancesheetOrPL_TrendRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinstat_Report_BalancesheetOrPL_TrendRow);
                return rowFinstat_Report_BalancesheetOrPL_TrendRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Finstat_Report_BalancesheetOrPL_TrendDataTable cln = ((Finstat_Report_BalancesheetOrPL_TrendDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Finstat_Report_BalancesheetOrPL_TrendDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnCurrentDate = base.Columns["CurrentDate"];
                this.columnCurrentAmount = base.Columns["CurrentAmount"];
                this.columnRefNote = base.Columns["RefNote"];
                this.columnClass = base.Columns["Class"];
                this.columnPosition = base.Columns["Position"];
                this.columnReportColor = base.Columns["ReportColor"];
                this.columnFinType = base.Columns["FinType"];
                this.columnTotalLine = base.Columns["TotalLine"];
                this.columnFinSubType = base.Columns["FinSubType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnCurrentDate = new global::System.Data.DataColumn("CurrentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDate);
                this.columnCurrentAmount = new global::System.Data.DataColumn("CurrentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmount);
                this.columnRefNote = new global::System.Data.DataColumn("RefNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNote);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnReportColor = new global::System.Data.DataColumn("ReportColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportColor);
                this.columnFinType = new global::System.Data.DataColumn("FinType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinType);
                this.columnTotalLine = new global::System.Data.DataColumn("TotalLine", typeof(sbyte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLine);
                this.columnFinSubType = new global::System.Data.DataColumn("FinSubType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinSubType);
                this.columnMainCaption.MaxLength = 250;
                this.columnCurrentDate.MaxLength = 10;
                this.columnRefNote.MaxLength = 50;
                this.columnReportColor.MaxLength = 50;
                this.columnFinType.MaxLength = 50;
                this.columnFinSubType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_TrendRow NewFinstat_Report_BalancesheetOrPL_TrendRow() {
                return ((Finstat_Report_BalancesheetOrPL_TrendRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Finstat_Report_BalancesheetOrPL_TrendRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Finstat_Report_BalancesheetOrPL_TrendRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Finstat_Report_BalancesheetOrPL_TrendRowChanged != null)) {
                    this.Finstat_Report_BalancesheetOrPL_TrendRowChanged(this, new Finstat_Report_BalancesheetOrPL_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Finstat_Report_BalancesheetOrPL_TrendRowChanging != null)) {
                    this.Finstat_Report_BalancesheetOrPL_TrendRowChanging(this, new Finstat_Report_BalancesheetOrPL_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Finstat_Report_BalancesheetOrPL_TrendRowDeleted != null)) {
                    this.Finstat_Report_BalancesheetOrPL_TrendRowDeleted(this, new Finstat_Report_BalancesheetOrPL_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Finstat_Report_BalancesheetOrPL_TrendRowDeleting != null)) {
                    this.Finstat_Report_BalancesheetOrPL_TrendRowDeleting(this, new Finstat_Report_BalancesheetOrPL_TrendRowChangeEvent(((Finstat_Report_BalancesheetOrPL_TrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFinstat_Report_BalancesheetOrPL_TrendRow(Finstat_Report_BalancesheetOrPL_TrendRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Finstat_Report_BalancesheetOrPL_TrendDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable : global::System.Data.TypedTableBase<Finstat_Report_BalancesheetOrPL_ComparisonTestRow> {
            
            private global::System.Data.DataColumn columnMainCaption;
            
            private global::System.Data.DataColumn columnCurrentDate;
            
            private global::System.Data.DataColumn columnPreviousAmount;
            
            private global::System.Data.DataColumn columnCurrentAmount;
            
            private global::System.Data.DataColumn columnGrowth;
            
            private global::System.Data.DataColumn columnPreviousDate;
            
            private global::System.Data.DataColumn columnpercentage;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnReportColor;
            
            private global::System.Data.DataColumn columnFinType;
            
            private global::System.Data.DataColumn columnTotalLine;
            
            private global::System.Data.DataColumn columnFinSubType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable() {
                this.TableName = "Finstat_Report_BalancesheetOrPL_ComparisonTest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MainCaptionColumn {
                get {
                    return this.columnMainCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentDateColumn {
                get {
                    return this.columnCurrentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousAmountColumn {
                get {
                    return this.columnPreviousAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountColumn {
                get {
                    return this.columnCurrentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GrowthColumn {
                get {
                    return this.columnGrowth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PreviousDateColumn {
                get {
                    return this.columnPreviousDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn percentageColumn {
                get {
                    return this.columnpercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReportColorColumn {
                get {
                    return this.columnReportColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FinTypeColumn {
                get {
                    return this.columnFinType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalLineColumn {
                get {
                    return this.columnTotalLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FinSubTypeColumn {
                get {
                    return this.columnFinSubType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_ComparisonTestRow this[int index] {
                get {
                    return ((Finstat_Report_BalancesheetOrPL_ComparisonTestRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEventHandler Finstat_Report_BalancesheetOrPL_ComparisonTestRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEventHandler Finstat_Report_BalancesheetOrPL_ComparisonTestRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEventHandler Finstat_Report_BalancesheetOrPL_ComparisonTestRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEventHandler Finstat_Report_BalancesheetOrPL_ComparisonTestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFinstat_Report_BalancesheetOrPL_ComparisonTestRow(Finstat_Report_BalancesheetOrPL_ComparisonTestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_ComparisonTestRow AddFinstat_Report_BalancesheetOrPL_ComparisonTestRow(string MainCaption, System.DateTime CurrentDate, decimal PreviousAmount, decimal CurrentAmount, decimal Growth, System.DateTime PreviousDate, decimal percentage, string RefNo, int Position, string ReportColor, string FinType, ulong TotalLine, string FinSubType) {
                Finstat_Report_BalancesheetOrPL_ComparisonTestRow rowFinstat_Report_BalancesheetOrPL_ComparisonTestRow = ((Finstat_Report_BalancesheetOrPL_ComparisonTestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MainCaption,
                        CurrentDate,
                        PreviousAmount,
                        CurrentAmount,
                        Growth,
                        PreviousDate,
                        percentage,
                        RefNo,
                        Position,
                        ReportColor,
                        FinType,
                        TotalLine,
                        FinSubType};
                rowFinstat_Report_BalancesheetOrPL_ComparisonTestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFinstat_Report_BalancesheetOrPL_ComparisonTestRow);
                return rowFinstat_Report_BalancesheetOrPL_ComparisonTestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable cln = ((Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMainCaption = base.Columns["MainCaption"];
                this.columnCurrentDate = base.Columns["CurrentDate"];
                this.columnPreviousAmount = base.Columns["PreviousAmount"];
                this.columnCurrentAmount = base.Columns["CurrentAmount"];
                this.columnGrowth = base.Columns["Growth"];
                this.columnPreviousDate = base.Columns["PreviousDate"];
                this.columnpercentage = base.Columns["percentage"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnPosition = base.Columns["Position"];
                this.columnReportColor = base.Columns["ReportColor"];
                this.columnFinType = base.Columns["FinType"];
                this.columnTotalLine = base.Columns["TotalLine"];
                this.columnFinSubType = base.Columns["FinSubType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMainCaption = new global::System.Data.DataColumn("MainCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainCaption);
                this.columnCurrentDate = new global::System.Data.DataColumn("CurrentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDate);
                this.columnPreviousAmount = new global::System.Data.DataColumn("PreviousAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousAmount);
                this.columnCurrentAmount = new global::System.Data.DataColumn("CurrentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmount);
                this.columnGrowth = new global::System.Data.DataColumn("Growth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrowth);
                this.columnPreviousDate = new global::System.Data.DataColumn("PreviousDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousDate);
                this.columnpercentage = new global::System.Data.DataColumn("percentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercentage);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnReportColor = new global::System.Data.DataColumn("ReportColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportColor);
                this.columnFinType = new global::System.Data.DataColumn("FinType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinType);
                this.columnTotalLine = new global::System.Data.DataColumn("TotalLine", typeof(ulong), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLine);
                this.columnFinSubType = new global::System.Data.DataColumn("FinSubType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinSubType);
                this.columnMainCaption.MaxLength = 250;
                this.columnRefNo.MaxLength = 50;
                this.columnReportColor.MaxLength = 50;
                this.columnFinType.MaxLength = 50;
                this.columnFinSubType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_ComparisonTestRow NewFinstat_Report_BalancesheetOrPL_ComparisonTestRow() {
                return ((Finstat_Report_BalancesheetOrPL_ComparisonTestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Finstat_Report_BalancesheetOrPL_ComparisonTestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Finstat_Report_BalancesheetOrPL_ComparisonTestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowChanged != null)) {
                    this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowChanged(this, new Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEvent(((Finstat_Report_BalancesheetOrPL_ComparisonTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowChanging != null)) {
                    this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowChanging(this, new Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEvent(((Finstat_Report_BalancesheetOrPL_ComparisonTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowDeleted != null)) {
                    this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowDeleted(this, new Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEvent(((Finstat_Report_BalancesheetOrPL_ComparisonTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowDeleting != null)) {
                    this.Finstat_Report_BalancesheetOrPL_ComparisonTestRowDeleting(this, new Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEvent(((Finstat_Report_BalancesheetOrPL_ComparisonTestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFinstat_Report_BalancesheetOrPL_ComparisonTestRow(Finstat_Report_BalancesheetOrPL_ComparisonTestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FintrakDS ds = new FintrakDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetReport_ColorRow : global::System.Data.DataRow {
            
            private GetReport_ColorDataTable tableGetReport_Color;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GetReport_ColorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetReport_Color = ((GetReport_ColorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TextColorHeader {
                get {
                    try {
                        return ((string)(this[this.tableGetReport_Color.TextColorHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextColorHeader\' in table \'GetReport_Color\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetReport_Color.TextColorHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TextColorBody {
                get {
                    try {
                        return ((string)(this[this.tableGetReport_Color.TextColorBodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TextColorBody\' in table \'GetReport_Color\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetReport_Color.TextColorBodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BackGroundHeader {
                get {
                    try {
                        return ((string)(this[this.tableGetReport_Color.BackGroundHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackGroundHeader\' in table \'GetReport_Color\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetReport_Color.BackGroundHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BackGroundAlternate1 {
                get {
                    try {
                        return ((string)(this[this.tableGetReport_Color.BackGroundAlternate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackGroundAlternate1\' in table \'GetReport_Color\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetReport_Color.BackGroundAlternate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SumGroupBackground {
                get {
                    try {
                        return ((string)(this[this.tableGetReport_Color.SumGroupBackgroundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumGroupBackground\' in table \'GetReport_Color\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetReport_Color.SumGroupBackgroundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BackGroundAlternate2 {
                get {
                    try {
                        return ((string)(this[this.tableGetReport_Color.BackGroundAlternate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackGroundAlternate2\' in table \'GetReport_Color\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetReport_Color.BackGroundAlternate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTextColorHeaderNull() {
                return this.IsNull(this.tableGetReport_Color.TextColorHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTextColorHeaderNull() {
                this[this.tableGetReport_Color.TextColorHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTextColorBodyNull() {
                return this.IsNull(this.tableGetReport_Color.TextColorBodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTextColorBodyNull() {
                this[this.tableGetReport_Color.TextColorBodyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBackGroundHeaderNull() {
                return this.IsNull(this.tableGetReport_Color.BackGroundHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBackGroundHeaderNull() {
                this[this.tableGetReport_Color.BackGroundHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBackGroundAlternate1Null() {
                return this.IsNull(this.tableGetReport_Color.BackGroundAlternate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBackGroundAlternate1Null() {
                this[this.tableGetReport_Color.BackGroundAlternate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSumGroupBackgroundNull() {
                return this.IsNull(this.tableGetReport_Color.SumGroupBackgroundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSumGroupBackgroundNull() {
                this[this.tableGetReport_Color.SumGroupBackgroundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBackGroundAlternate2Null() {
                return this.IsNull(this.tableGetReport_Color.BackGroundAlternate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBackGroundAlternate2Null() {
                this[this.tableGetReport_Color.BackGroundAlternate2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow : global::System.Data.DataRow {
            
            private Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable tableFinstat_Report_BalancesheetOrPL_Sub_Comparison;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison = ((Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'Finstat_Report_BalancesheetOrPL_Sub_" +
                                "Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long SubPosition {
                get {
                    try {
                        return ((long)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubPosition\' in table \'Finstat_Report_BalancesheetOrPL_Sub_" +
                                "Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCaption\' in table \'Finstat_Report_BalancesheetOrPL_Sub_C" +
                                "omparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubSubCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubSubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubSubCaption\' in table \'Finstat_Report_BalancesheetOrPL_Su" +
                                "b_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubSubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RefNo {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.RefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNo\' in table \'Finstat_Report_BalancesheetOrPL_Sub_Compar" +
                                "ison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousDate\' in table \'Finstat_Report_BalancesheetOrPL_Sub" +
                                "_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CurrentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDate\' in table \'Finstat_Report_BalancesheetOrPL_Sub_" +
                                "Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CurrentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmount\' in table \'Finstat_Report_BalancesheetOrPL_Su" +
                                "b_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'Finstat_Report_BalancesheetOrPL_S" +
                                "ub_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Growth {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.GrowthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Growth\' in table \'Finstat_Report_BalancesheetOrPL_Sub_Compa" +
                                "rison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.GrowthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal percentage {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.percentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'percentage\' in table \'Finstat_Report_BalancesheetOrPL_Sub_C" +
                                "omparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.percentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubPositionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubPositionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubSubCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubSubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubSubCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.SubSubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRefNoNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.RefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRefNoNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.RefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.CurrentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGrowthNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.GrowthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGrowthNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.GrowthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspercentageNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.percentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpercentageNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Comparison.percentageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Finstat_Report_BalancesheetOrPL_Sub_TrendRow : global::System.Data.DataRow {
            
            private Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable tableFinstat_Report_BalancesheetOrPL_Sub_Trend;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Sub_TrendRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend = ((Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'Finstat_Report_BalancesheetOrPL_Sub_" +
                                "Trend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SubPosition {
                get {
                    try {
                        return ((int)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubPosition\' in table \'Finstat_Report_BalancesheetOrPL_Sub_" +
                                "Trend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCaption\' in table \'Finstat_Report_BalancesheetOrPL_Sub_T" +
                                "rend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubSubCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubSubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubSubCaption\' in table \'Finstat_Report_BalancesheetOrPL_Su" +
                                "b_Trend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubSubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RefNo {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.RefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNo\' in table \'Finstat_Report_BalancesheetOrPL_Sub_Trend\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CurrentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDate\' in table \'Finstat_Report_BalancesheetOrPL_Sub_" +
                                "Trend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CurrentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmount\' in table \'Finstat_Report_BalancesheetOrPL_Su" +
                                "b_Trend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubPositionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubPositionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubSubCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubSubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubSubCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.SubSubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRefNoNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.RefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRefNoNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.RefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Sub_Trend.CurrentAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Finstat_Report_BalancesheetOrPL_Gl_TrendRow : global::System.Data.DataRow {
            
            private Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable tableFinstat_Report_BalancesheetOrPL_Gl_Trend;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Gl_TrendRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend = ((Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'Finstat_Report_BalancesheetOrPL_Gl_T" +
                                "rend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.SubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCaption\' in table \'Finstat_Report_BalancesheetOrPL_Gl_Tr" +
                                "end\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.SubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubSubCaption {
                get {
                    return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.SubSubCaptionColumn]));
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.SubSubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime currentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.currentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'currentDate\' in table \'Finstat_Report_BalancesheetOrPL_Gl_T" +
                                "rend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.currentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GLCode {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLCode\' in table \'Finstat_Report_BalancesheetOrPL_Gl_Trend\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GLDescription {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLDescription\' in table \'Finstat_Report_BalancesheetOrPL_Gl" +
                                "_Trend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CurrentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.CurrentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmount\' in table \'Finstat_Report_BalancesheetOrPL_Gl" +
                                "_Trend\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.CurrentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.SubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.SubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscurrentDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.currentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcurrentDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.currentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGLCodeNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGLCodeNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGLDescriptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGLDescriptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.GLDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.CurrentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Trend.CurrentAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class finstat_Report_ManagementNoteBSRow : global::System.Data.DataRow {
            
            private finstat_Report_ManagementNoteBSDataTable tablefinstat_Report_ManagementNoteBS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_ManagementNoteBSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefinstat_Report_ManagementNoteBS = ((finstat_Report_ManagementNoteBSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_ManagementNoteBS.RunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunDate\' in table \'finstat_Report_ManagementNoteBS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.RunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_ManagementNoteBS.PreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousRunDate\' in table \'finstat_Report_ManagementNoteBS\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.PreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousPreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousRunDate\' in table \'finstat_Report_Managemen" +
                                "tNoteBS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Averagerate {
                get {
                    try {
                        return ((double)(this[this.tablefinstat_Report_ManagementNoteBS.AveragerateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Averagerate\' in table \'finstat_Report_ManagementNoteBS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.AveragerateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNoteBS.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'finstat_Report_ManagementNoteBS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNoteBS.SubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCaption\' in table \'finstat_Report_ManagementNoteBS\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.SubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubSubCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNoteBS.SubSubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubSubCaption\' in table \'finstat_Report_ManagementNoteBS\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.SubSubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SubPosition {
                get {
                    try {
                        return ((int)(this[this.tablefinstat_Report_ManagementNoteBS.SubPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubPosition\' in table \'finstat_Report_ManagementNoteBS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.SubPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fintype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNoteBS.fintypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fintype\' in table \'finstat_Report_ManagementNoteBS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.fintypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string finsubtype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNoteBS.finsubtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finsubtype\' in table \'finstat_Report_ManagementNoteBS\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.finsubtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Position {
                get {
                    try {
                        return ((int)(this[this.tablefinstat_Report_ManagementNoteBS.PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Position\' in table \'finstat_Report_ManagementNoteBS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RefNote {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNoteBS.RefNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNote\' in table \'finstat_Report_ManagementNoteBS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.RefNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNoteBS.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'finstat_Report_ManagementNoteBS\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNoteBS.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'finstat_Report_ManagementNoteBS\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousPreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousAmount\' in table \'finstat_Report_Management" +
                                "NoteBS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariance {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNoteBS.YTDVarianceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTDVariance\' in table \'finstat_Report_ManagementNoteBS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.YTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNoteBS.YTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTDVariancePercentage\' in table \'finstat_Report_ManagementN" +
                                "oteBS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.YTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long IsBold {
                get {
                    return ((long)(this[this.tablefinstat_Report_ManagementNoteBS.IsBoldColumn]));
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.IsBoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long IsTotalLine {
                get {
                    return ((long)(this[this.tablefinstat_Report_ManagementNoteBS.IsTotalLineColumn]));
                }
                set {
                    this[this.tablefinstat_Report_ManagementNoteBS.IsTotalLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.RunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRunDateNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.RunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.PreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousRunDateNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.PreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousRunDateNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAveragerateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.AveragerateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAveragerateNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.AveragerateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.SubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubCaptionNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.SubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubSubCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.SubSubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubSubCaptionNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.SubSubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubPositionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.SubPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubPositionNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.SubPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfintypeNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.fintypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfintypeNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.fintypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfinsubtypeNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.finsubtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfinsubtypeNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.finsubtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPositionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPositionNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRefNoteNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.RefNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRefNoteNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.RefNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAmountNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousAmountNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.PreviousPreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsYTDVarianceNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.YTDVarianceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetYTDVarianceNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.YTDVarianceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsYTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNoteBS.YTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetYTDVariancePercentageNull() {
                this[this.tablefinstat_Report_ManagementNoteBS.YTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow : global::System.Data.DataRow {
            
            private Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable tableFinstat_Report_BalancesheetOrPL_Gl_Comparison;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison = ((Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'Finstat_Report_BalancesheetOrPL_Gl_C" +
                                "omparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCaption\' in table \'Finstat_Report_BalancesheetOrPL_Gl_Co" +
                                "mparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubSubCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubSubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubSubCaption\' in table \'Finstat_Report_BalancesheetOrPL_Gl" +
                                "_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubSubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GLCode {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLCode\' in table \'Finstat_Report_BalancesheetOrPL_Gl_Compar" +
                                "ison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GLDescription {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLDescription\' in table \'Finstat_Report_BalancesheetOrPL_Gl" +
                                "_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousDate\' in table \'Finstat_Report_BalancesheetOrPL_Gl_" +
                                "Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CurrentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDate\' in table \'Finstat_Report_BalancesheetOrPL_Gl_C" +
                                "omparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CurrentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmount\' in table \'Finstat_Report_BalancesheetOrPL_Gl" +
                                "_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'Finstat_Report_BalancesheetOrPL_G" +
                                "l_Comparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Growth {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GrowthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Growth\' in table \'Finstat_Report_BalancesheetOrPL_Gl_Compar" +
                                "ison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GrowthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal percentage {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.percentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'percentage\' in table \'Finstat_Report_BalancesheetOrPL_Gl_Co" +
                                "mparison\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.percentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubSubCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubSubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubSubCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.SubSubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGLCodeNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGLCodeNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGLDescriptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGLDescriptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GLDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.CurrentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGrowthNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GrowthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGrowthNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.GrowthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspercentageNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.percentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpercentageNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Gl_Comparison.percentageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class finstat_Report_ManagementNotePLRow : global::System.Data.DataRow {
            
            private finstat_Report_ManagementNotePLDataTable tablefinstat_Report_ManagementNotePL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_ManagementNotePLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefinstat_Report_ManagementNotePL = ((finstat_Report_ManagementNotePLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_ManagementNotePL.RunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunDate\' in table \'finstat_Report_ManagementNotePL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.RunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_ManagementNotePL.PreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousRunDate\' in table \'finstat_Report_ManagementNotePL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.PreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousPreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_ManagementNotePL.PreviousPreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousRunDate\' in table \'finstat_Report_Managemen" +
                                "tNotePL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.PreviousPreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Averagerate {
                get {
                    try {
                        return ((double)(this[this.tablefinstat_Report_ManagementNotePL.AveragerateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Averagerate\' in table \'finstat_Report_ManagementNotePL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.AveragerateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNotePL.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'finstat_Report_ManagementNotePL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNotePL.SubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCaption\' in table \'finstat_Report_ManagementNotePL\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.SubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubSubCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNotePL.SubSubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubSubCaption\' in table \'finstat_Report_ManagementNotePL\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.SubSubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SubPosition {
                get {
                    try {
                        return ((int)(this[this.tablefinstat_Report_ManagementNotePL.SubPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubPosition\' in table \'finstat_Report_ManagementNotePL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.SubPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fintype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNotePL.fintypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fintype\' in table \'finstat_Report_ManagementNotePL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.fintypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string finsubtype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNotePL.finsubtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finsubtype\' in table \'finstat_Report_ManagementNotePL\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.finsubtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Position {
                get {
                    try {
                        return ((int)(this[this.tablefinstat_Report_ManagementNotePL.PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Position\' in table \'finstat_Report_ManagementNotePL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RefNote {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_ManagementNotePL.RefNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNote\' in table \'finstat_Report_ManagementNotePL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.RefNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'finstat_Report_ManagementNotePL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'finstat_Report_ManagementNotePL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.YTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.YTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.YTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTDVariancePercentage\' in table \'finstat_Report_ManagementN" +
                                "otePL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.YTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousPreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.PreviousPreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousAmount\' in table \'finstat_Report_Management" +
                                "NotePL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.PreviousPreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.MTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTD\' in table \'finstat_Report_ManagementNotePL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.MTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.PrevMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMTD\' in table \'finstat_Report_ManagementNotePL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.PrevMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.MTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.MTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.MTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTDVariancePercentage\' in table \'finstat_Report_ManagementN" +
                                "otePL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.MTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMONTH {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_ManagementNotePL.PrevMONTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMONTH\' in table \'finstat_Report_ManagementNotePL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.PrevMONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long IsBold {
                get {
                    return ((long)(this[this.tablefinstat_Report_ManagementNotePL.IsBoldColumn]));
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.IsBoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long IsTotalLine {
                get {
                    return ((long)(this[this.tablefinstat_Report_ManagementNotePL.IsTotalLineColumn]));
                }
                set {
                    this[this.tablefinstat_Report_ManagementNotePL.IsTotalLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.RunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRunDateNull() {
                this[this.tablefinstat_Report_ManagementNotePL.RunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.PreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousRunDateNull() {
                this[this.tablefinstat_Report_ManagementNotePL.PreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.PreviousPreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousRunDateNull() {
                this[this.tablefinstat_Report_ManagementNotePL.PreviousPreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAveragerateNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.AveragerateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAveragerateNull() {
                this[this.tablefinstat_Report_ManagementNotePL.AveragerateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tablefinstat_Report_ManagementNotePL.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.SubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubCaptionNull() {
                this[this.tablefinstat_Report_ManagementNotePL.SubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubSubCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.SubSubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubSubCaptionNull() {
                this[this.tablefinstat_Report_ManagementNotePL.SubSubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubPositionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.SubPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubPositionNull() {
                this[this.tablefinstat_Report_ManagementNotePL.SubPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfintypeNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.fintypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfintypeNull() {
                this[this.tablefinstat_Report_ManagementNotePL.fintypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfinsubtypeNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.finsubtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfinsubtypeNull() {
                this[this.tablefinstat_Report_ManagementNotePL.finsubtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPositionNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPositionNull() {
                this[this.tablefinstat_Report_ManagementNotePL.PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRefNoteNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.RefNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRefNoteNull() {
                this[this.tablefinstat_Report_ManagementNotePL.RefNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAmountNull() {
                this[this.tablefinstat_Report_ManagementNotePL.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tablefinstat_Report_ManagementNotePL.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsYTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.YTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetYTDVariancePercentageNull() {
                this[this.tablefinstat_Report_ManagementNotePL.YTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.PreviousPreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousAmountNull() {
                this[this.tablefinstat_Report_ManagementNotePL.PreviousPreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.MTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDNull() {
                this[this.tablefinstat_Report_ManagementNotePL.MTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMTDNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.PrevMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMTDNull() {
                this[this.tablefinstat_Report_ManagementNotePL.PrevMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.MTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDVariancePercentageNull() {
                this[this.tablefinstat_Report_ManagementNotePL.MTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMONTHNull() {
                return this.IsNull(this.tablefinstat_Report_ManagementNotePL.PrevMONTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMONTHNull() {
                this[this.tablefinstat_Report_ManagementNotePL.PrevMONTHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class finstat_Report_BalancesheetOrPL_GlRow : global::System.Data.DataRow {
            
            private finstat_Report_BalancesheetOrPL_GlDataTable tablefinstat_Report_BalancesheetOrPL_Gl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_BalancesheetOrPL_GlRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefinstat_Report_BalancesheetOrPL_Gl = ((finstat_Report_BalancesheetOrPL_GlDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.RunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunDate\' in table \'finstat_Report_BalancesheetOrPL_Gl\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.RunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousRunDate\' in table \'finstat_Report_BalancesheetOrPL_" +
                                "Gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousPreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousRunDate\' in table \'finstat_Report_Balancesh" +
                                "eetOrPL_Gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Averagerate {
                get {
                    try {
                        return ((double)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.AveragerateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Averagerate\' in table \'finstat_Report_BalancesheetOrPL_Gl\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.AveragerateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GlCode {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlCode\' in table \'finstat_Report_BalancesheetOrPL_Gl\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GlDescription {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlDescription\' in table \'finstat_Report_BalancesheetOrPL_Gl" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GlSubCode {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlSubCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlSubCode\' in table \'finstat_Report_BalancesheetOrPL_Gl\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlSubCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CompanyCode {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.CompanyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCode\' in table \'finstat_Report_BalancesheetOrPL_Gl\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.CompanyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'finstat_Report_BalancesheetOrPL_Gl\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'finstat_Report_BalancesheetOrPL_G" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.YTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.YTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.YTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTDVariancePercentage\' in table \'finstat_Report_Balanceshee" +
                                "tOrPL_Gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.YTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousPreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousAmount\' in table \'finstat_Report_Balanceshe" +
                                "etOrPL_Gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTD\' in table \'finstat_Report_BalancesheetOrPL_Gl\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMTD\' in table \'finstat_Report_BalancesheetOrPL_Gl\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTDVariancePercentage\' in table \'finstat_Report_Balanceshee" +
                                "tOrPL_Gl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMONTH {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMONTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMONTH\' in table \'finstat_Report_BalancesheetOrPL_Gl\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.RunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.RunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAveragerateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.AveragerateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAveragerateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.AveragerateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGlCodeNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.GlCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGlCodeNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGlDescriptionNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.GlDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGlDescriptionNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGlSubCodeNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.GlSubCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGlSubCodeNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.GlSubCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCompanyCodeNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.CompanyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCompanyCodeNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.CompanyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsYTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.YTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetYTDVariancePercentageNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.YTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PreviousPreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDVariancePercentageNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.MTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMONTHNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMONTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMONTHNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Gl.PrevMONTHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class finstat_Report_BalancesheetOrPLRow : global::System.Data.DataRow {
            
            private finstat_Report_BalancesheetOrPLDataTable tablefinstat_Report_BalancesheetOrPL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_BalancesheetOrPLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefinstat_Report_BalancesheetOrPL = ((finstat_Report_BalancesheetOrPLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL.RunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunDate\' in table \'finstat_Report_BalancesheetOrPL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.RunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL.PreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousRunDate\' in table \'finstat_Report_BalancesheetOrPL\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.PreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousPreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousRunDate\' in table \'finstat_Report_Balancesh" +
                                "eetOrPL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Averagerate {
                get {
                    try {
                        return ((double)(this[this.tablefinstat_Report_BalancesheetOrPL.AveragerateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Averagerate\' in table \'finstat_Report_BalancesheetOrPL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.AveragerateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'finstat_Report_BalancesheetOrPL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fintype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL.fintypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fintype\' in table \'finstat_Report_BalancesheetOrPL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.fintypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string finsubtype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL.finsubtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finsubtype\' in table \'finstat_Report_BalancesheetOrPL\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.finsubtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalLine {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL.TotalLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLine\' in table \'finstat_Report_BalancesheetOrPL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.TotalLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string refnote {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL.refnoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refnote\' in table \'finstat_Report_BalancesheetOrPL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.refnoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int position {
                get {
                    try {
                        return ((int)(this[this.tablefinstat_Report_BalancesheetOrPL.positionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position\' in table \'finstat_Report_BalancesheetOrPL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReportColor {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL.ReportColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportColor\' in table \'finstat_Report_BalancesheetOrPL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.ReportColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'finstat_Report_BalancesheetOrPL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'finstat_Report_BalancesheetOrPL\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.YTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.YTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.YTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTDVariancePercentage\' in table \'finstat_Report_Balanceshee" +
                                "tOrPL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.YTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousPreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousAmount\' in table \'finstat_Report_Balanceshe" +
                                "etOrPL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.MTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTD\' in table \'finstat_Report_BalancesheetOrPL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.MTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.PrevMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMTD\' in table \'finstat_Report_BalancesheetOrPL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.PrevMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.MTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.MTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.MTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTDVariancePercentage\' in table \'finstat_Report_Balanceshee" +
                                "tOrPL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.MTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMONTH {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.PrevMONTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMONTH\' in table \'finstat_Report_BalancesheetOrPL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.PrevMONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BudgetYTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.BudgetYTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetYTD\' in table \'finstat_Report_BalancesheetOrPL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.BudgetYTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BudgetMTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.BudgetMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetMTD\' in table \'finstat_Report_BalancesheetOrPL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.BudgetMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDAchieved {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.MTDAchievedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTDAchieved\' in table \'finstat_Report_BalancesheetOrPL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.MTDAchievedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDAchieved {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL.YTDAchievedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTDAchieved\' in table \'finstat_Report_BalancesheetOrPL\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL.YTDAchievedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.RunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.RunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.PreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.PreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAveragerateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.AveragerateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAveragerateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.AveragerateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfintypeNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.fintypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfintypeNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.fintypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfinsubtypeNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.finsubtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfinsubtypeNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.finsubtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalLineNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.TotalLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalLineNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.TotalLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsrefnoteNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.refnoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetrefnoteNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.refnoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspositionNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.positionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpositionNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.positionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReportColorNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.ReportColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReportColorNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.ReportColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsYTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.YTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetYTDVariancePercentageNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.YTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.PreviousPreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.MTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.MTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.PrevMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.PrevMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.MTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDVariancePercentageNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.MTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMONTHNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.PrevMONTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMONTHNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.PrevMONTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBudgetYTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.BudgetYTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBudgetYTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.BudgetYTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBudgetMTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.BudgetMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBudgetMTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.BudgetMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDAchievedNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.MTDAchievedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDAchievedNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.MTDAchievedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsYTDAchievedNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL.YTDAchievedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetYTDAchievedNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL.YTDAchievedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class finstat_Report_BalancesheetOrPL_SubRow : global::System.Data.DataRow {
            
            private finstat_Report_BalancesheetOrPL_SubDataTable tablefinstat_Report_BalancesheetOrPL_Sub;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal finstat_Report_BalancesheetOrPL_SubRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefinstat_Report_BalancesheetOrPL_Sub = ((finstat_Report_BalancesheetOrPL_SubDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.RunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RunDate\' in table \'finstat_Report_BalancesheetOrPL_Sub\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.RunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousRunDate\' in table \'finstat_Report_BalancesheetOrPL_" +
                                "Sub\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousPreviousRunDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousRunDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousRunDate\' in table \'finstat_Report_Balancesh" +
                                "eetOrPL_Sub\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousRunDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double Averagerate {
                get {
                    try {
                        return ((double)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.AveragerateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Averagerate\' in table \'finstat_Report_BalancesheetOrPL_Sub\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.AveragerateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'finstat_Report_BalancesheetOrPL_Sub\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubCaption {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.SubCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCaption\' in table \'finstat_Report_BalancesheetOrPL_Sub\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.SubCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SubPosition {
                get {
                    try {
                        return ((int)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.SubPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubPosition\' in table \'finstat_Report_BalancesheetOrPL_Sub\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.SubPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fintype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.fintypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fintype\' in table \'finstat_Report_BalancesheetOrPL_Sub\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.fintypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string finsubtype {
                get {
                    try {
                        return ((string)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.finsubtypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finsubtype\' in table \'finstat_Report_BalancesheetOrPL_Sub\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.finsubtypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int position {
                get {
                    try {
                        return ((int)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.positionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position\' in table \'finstat_Report_BalancesheetOrPL_Sub\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'finstat_Report_BalancesheetOrPL_Sub\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'finstat_Report_BalancesheetOrPL_S" +
                                "ub\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.YTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.YTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.YTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YTDVariancePercentage\' in table \'finstat_Report_Balanceshee" +
                                "tOrPL_Sub\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.YTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousPreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousPreviousAmount\' in table \'finstat_Report_Balanceshe" +
                                "etOrPL_Sub\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTD\' in table \'finstat_Report_BalancesheetOrPL_Sub\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMTD {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMTD\' in table \'finstat_Report_BalancesheetOrPL_Sub\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariance {
                get {
                    return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDVarianceColumn]));
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDVarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MTDVariancePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDVariancePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTDVariancePercentage\' in table \'finstat_Report_Balanceshee" +
                                "tOrPL_Sub\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDVariancePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PrevMONTH {
                get {
                    try {
                        return ((decimal)(this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMONTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevMONTH\' in table \'finstat_Report_BalancesheetOrPL_Sub\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMONTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.RunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.RunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousRunDateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousRunDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousRunDateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousRunDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAveragerateNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.AveragerateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAveragerateNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.AveragerateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubCaptionNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.SubCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubCaptionNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.SubCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubPositionNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.SubPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubPositionNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.SubPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfintypeNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.fintypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfintypeNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.fintypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsfinsubtypeNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.finsubtypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetfinsubtypeNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.finsubtypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspositionNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.positionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpositionNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.positionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsYTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.YTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetYTDVariancePercentageNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.YTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousPreviousAmountNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousPreviousAmountNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PreviousPreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMTDNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMTDNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMTDVariancePercentageNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDVariancePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMTDVariancePercentageNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.MTDVariancePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPrevMONTHNull() {
                return this.IsNull(this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMONTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPrevMONTHNull() {
                this[this.tablefinstat_Report_BalancesheetOrPL_Sub.PrevMONTHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetReport_DivisorRow : global::System.Data.DataRow {
            
            private GetReport_DivisorDataTable tableGetReport_Divisor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal GetReport_DivisorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetReport_Divisor = ((GetReport_DivisorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string divisor {
                get {
                    try {
                        return ((string)(this[this.tableGetReport_Divisor.divisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'divisor\' in table \'GetReport_Divisor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetReport_Divisor.divisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsdivisorNull() {
                return this.IsNull(this.tableGetReport_Divisor.divisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetdivisorNull() {
                this[this.tableGetReport_Divisor.divisorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Finstat_Reports_QualitativeNotesRow : global::System.Data.DataRow {
            
            private Finstat_Reports_QualitativeNotesDataTable tableFinstat_Reports_QualitativeNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Reports_QualitativeNotesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinstat_Reports_QualitativeNotes = ((Finstat_Reports_QualitativeNotesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableFinstat_Reports_QualitativeNotes.idColumn]));
                }
                set {
                    this[this.tableFinstat_Reports_QualitativeNotes.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TopNotes {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Reports_QualitativeNotes.TopNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopNotes\' in table \'Finstat_Reports_QualitativeNotes\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Reports_QualitativeNotes.TopNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BottomNotes {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Reports_QualitativeNotes.BottomNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BottomNotes\' in table \'Finstat_Reports_QualitativeNotes\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Reports_QualitativeNotes.BottomNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Rundate {
                get {
                    return ((global::System.DateTime)(this[this.tableFinstat_Reports_QualitativeNotes.RundateColumn]));
                }
                set {
                    this[this.tableFinstat_Reports_QualitativeNotes.RundateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Report {
                get {
                    return ((string)(this[this.tableFinstat_Reports_QualitativeNotes.ReportColumn]));
                }
                set {
                    this[this.tableFinstat_Reports_QualitativeNotes.ReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTopNotesNull() {
                return this.IsNull(this.tableFinstat_Reports_QualitativeNotes.TopNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTopNotesNull() {
                this[this.tableFinstat_Reports_QualitativeNotes.TopNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBottomNotesNull() {
                return this.IsNull(this.tableFinstat_Reports_QualitativeNotes.BottomNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBottomNotesNull() {
                this[this.tableFinstat_Reports_QualitativeNotes.BottomNotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Finstat_Report_BalancesheetOrPL_TrendRow : global::System.Data.DataRow {
            
            private Finstat_Report_BalancesheetOrPL_TrendDataTable tableFinstat_Report_BalancesheetOrPL_Trend;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_TrendRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinstat_Report_BalancesheetOrPL_Trend = ((Finstat_Report_BalancesheetOrPL_TrendDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'Finstat_Report_BalancesheetOrPL_Tren" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CurrentDate {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDate\' in table \'Finstat_Report_BalancesheetOrPL_Tren" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CurrentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmount\' in table \'Finstat_Report_BalancesheetOrPL_Tr" +
                                "end\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RefNote {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.RefNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNote\' in table \'Finstat_Report_BalancesheetOrPL_Trend\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.RefNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Class {
                get {
                    try {
                        return ((int)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Finstat_Report_BalancesheetOrPL_Trend\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Position {
                get {
                    try {
                        return ((int)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Position\' in table \'Finstat_Report_BalancesheetOrPL_Trend\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReportColor {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.ReportColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportColor\' in table \'Finstat_Report_BalancesheetOrPL_Tren" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.ReportColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FinType {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.FinTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinType\' in table \'Finstat_Report_BalancesheetOrPL_Trend\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.FinTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public sbyte TotalLine {
                get {
                    try {
                        return ((sbyte)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.TotalLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLine\' in table \'Finstat_Report_BalancesheetOrPL_Trend\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.TotalLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FinSubType {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_Trend.FinSubTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinSubType\' in table \'Finstat_Report_BalancesheetOrPL_Trend" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_Trend.FinSubTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.CurrentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRefNoteNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.RefNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRefNoteNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.RefNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsClassNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetClassNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPositionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPositionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReportColorNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.ReportColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReportColorNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.ReportColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFinTypeNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.FinTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFinTypeNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.FinTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalLineNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.TotalLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalLineNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.TotalLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFinSubTypeNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_Trend.FinSubTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFinSubTypeNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_Trend.FinSubTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Finstat_Report_BalancesheetOrPL_ComparisonTestRow : global::System.Data.DataRow {
            
            private Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable tableFinstat_Report_BalancesheetOrPL_ComparisonTest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Finstat_Report_BalancesheetOrPL_ComparisonTestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest = ((Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MainCaption {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.MainCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainCaption\' in table \'Finstat_Report_BalancesheetOrPL_Comp" +
                                "arisonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.MainCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CurrentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDate\' in table \'Finstat_Report_BalancesheetOrPL_Comp" +
                                "arisonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PreviousAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousAmount\' in table \'Finstat_Report_BalancesheetOrPL_C" +
                                "omparisonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CurrentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmount\' in table \'Finstat_Report_BalancesheetOrPL_Co" +
                                "mparisonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Growth {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.GrowthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Growth\' in table \'Finstat_Report_BalancesheetOrPL_Compariso" +
                                "nTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.GrowthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PreviousDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousDate\' in table \'Finstat_Report_BalancesheetOrPL_Com" +
                                "parisonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal percentage {
                get {
                    try {
                        return ((decimal)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.percentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'percentage\' in table \'Finstat_Report_BalancesheetOrPL_Compa" +
                                "risonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.percentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RefNo {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.RefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNo\' in table \'Finstat_Report_BalancesheetOrPL_Comparison" +
                                "Test\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Position {
                get {
                    try {
                        return ((int)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Position\' in table \'Finstat_Report_BalancesheetOrPL_Compari" +
                                "sonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReportColor {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.ReportColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportColor\' in table \'Finstat_Report_BalancesheetOrPL_Comp" +
                                "arisonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.ReportColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FinType {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinType\' in table \'Finstat_Report_BalancesheetOrPL_Comparis" +
                                "onTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ulong TotalLine {
                get {
                    try {
                        return ((ulong)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.TotalLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLine\' in table \'Finstat_Report_BalancesheetOrPL_Compar" +
                                "isonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.TotalLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FinSubType {
                get {
                    try {
                        return ((string)(this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinSubTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinSubType\' in table \'Finstat_Report_BalancesheetOrPL_Compa" +
                                "risonTest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinSubTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMainCaptionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.MainCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMainCaptionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.MainCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCurrentAmountNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCurrentAmountNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.CurrentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGrowthNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.GrowthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGrowthNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.GrowthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPreviousDateNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPreviousDateNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PreviousDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IspercentageNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.percentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetpercentageNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.percentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRefNoNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.RefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRefNoNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.RefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPositionNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPositionNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReportColorNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.ReportColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReportColorNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.ReportColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFinTypeNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFinTypeNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalLineNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.TotalLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalLineNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.TotalLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFinSubTypeNull() {
                return this.IsNull(this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinSubTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFinSubTypeNull() {
                this[this.tableFinstat_Report_BalancesheetOrPL_ComparisonTest.FinSubTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class GetReport_ColorRowChangeEvent : global::System.EventArgs {
            
            private GetReport_ColorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_ColorRowChangeEvent(GetReport_ColorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_ColorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEvent : global::System.EventArgs {
            
            private Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_ComparisonRowChangeEvent(Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_ComparisonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEvent : global::System.EventArgs {
            
            private Finstat_Report_BalancesheetOrPL_Sub_TrendRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_TrendRowChangeEvent(Finstat_Report_BalancesheetOrPL_Sub_TrendRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Sub_TrendRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEvent : global::System.EventArgs {
            
            private Finstat_Report_BalancesheetOrPL_Gl_TrendRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_TrendRowChangeEvent(Finstat_Report_BalancesheetOrPL_Gl_TrendRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_TrendRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class finstat_Report_ManagementNoteBSRowChangeEvent : global::System.EventArgs {
            
            private finstat_Report_ManagementNoteBSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNoteBSRowChangeEvent(finstat_Report_ManagementNoteBSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNoteBSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEvent : global::System.EventArgs {
            
            private Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_ComparisonRowChangeEvent(Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_Gl_ComparisonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class finstat_Report_ManagementNotePLRowChangeEvent : global::System.EventArgs {
            
            private finstat_Report_ManagementNotePLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNotePLRowChangeEvent(finstat_Report_ManagementNotePLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_ManagementNotePLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class finstat_Report_BalancesheetOrPL_GlRowChangeEvent : global::System.EventArgs {
            
            private finstat_Report_BalancesheetOrPL_GlRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_GlRowChangeEvent(finstat_Report_BalancesheetOrPL_GlRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_GlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class finstat_Report_BalancesheetOrPLRowChangeEvent : global::System.EventArgs {
            
            private finstat_Report_BalancesheetOrPLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPLRowChangeEvent(finstat_Report_BalancesheetOrPLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class finstat_Report_BalancesheetOrPL_SubRowChangeEvent : global::System.EventArgs {
            
            private finstat_Report_BalancesheetOrPL_SubRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_SubRowChangeEvent(finstat_Report_BalancesheetOrPL_SubRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public finstat_Report_BalancesheetOrPL_SubRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class GetReport_DivisorRowChangeEvent : global::System.EventArgs {
            
            private GetReport_DivisorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_DivisorRowChangeEvent(GetReport_DivisorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public GetReport_DivisorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Finstat_Reports_QualitativeNotesRowChangeEvent : global::System.EventArgs {
            
            private Finstat_Reports_QualitativeNotesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Reports_QualitativeNotesRowChangeEvent(Finstat_Reports_QualitativeNotesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Reports_QualitativeNotesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Finstat_Report_BalancesheetOrPL_TrendRowChangeEvent : global::System.EventArgs {
            
            private Finstat_Report_BalancesheetOrPL_TrendRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_TrendRowChangeEvent(Finstat_Report_BalancesheetOrPL_TrendRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_TrendRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEvent : global::System.EventArgs {
            
            private Finstat_Report_BalancesheetOrPL_ComparisonTestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_ComparisonTestRowChangeEvent(Finstat_Report_BalancesheetOrPL_ComparisonTestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Finstat_Report_BalancesheetOrPL_ComparisonTestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Fintrak.Presentation.WebClient.app.reporting.views.IFRSReporting.FintrakDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetReport_ColorTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public GetReport_ColorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetReport_Color";
            tableMapping.ColumnMappings.Add("TextColorHeader", "TextColorHeader");
            tableMapping.ColumnMappings.Add("TextColorBody", "TextColorBody");
            tableMapping.ColumnMappings.Add("BackGroundHeader", "BackGroundHeader");
            tableMapping.ColumnMappings.Add("BackGroundAlternate1", "BackGroundAlternate1");
            tableMapping.ColumnMappings.Add("SumGroupBackground", "SumGroupBackground");
            tableMapping.ColumnMappings.Add("BackGroundAlternate2", "BackGroundAlternate2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`GetReport_Color`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.GetReport_ColorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.GetReport_ColorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FintrakDS.GetReport_ColorDataTable dataTable = new FintrakDS.GetReport_ColorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Finstat_Report_BalancesheetOrPL_Sub_ComparisonTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Finstat_Report_BalancesheetOrPL_Sub_ComparisonTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Finstat_Report_BalancesheetOrPL_Sub_Comparison";
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("SubPosition", "SubPosition");
            tableMapping.ColumnMappings.Add("SubCaption", "SubCaption");
            tableMapping.ColumnMappings.Add("SubSubCaption", "SubSubCaption");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("PreviousDate", "PreviousDate");
            tableMapping.ColumnMappings.Add("CurrentDate", "CurrentDate");
            tableMapping.ColumnMappings.Add("CurrentAmount", "CurrentAmount");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("Growth", "Growth");
            tableMapping.ColumnMappings.Add("percentage", "percentage");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`Finstat_Report_BalancesheetOrPL_Sub_Comparison`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_PreviousDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_MainCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable dataTable, global::System.Nullable<global::System.DateTime> p_PreviousDate, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_PreviousDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_PreviousDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_MainCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Currency));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable GetData(global::System.Nullable<global::System.DateTime> p_PreviousDate, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_PreviousDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_PreviousDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_MainCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Currency));
            }
            FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable dataTable = new FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_ComparisonDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Finstat_Report_BalancesheetOrPL_Sub_TrendTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Finstat_Report_BalancesheetOrPL_Sub_TrendTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Finstat_Report_BalancesheetOrPL_Sub_Trend";
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("SubPosition", "SubPosition");
            tableMapping.ColumnMappings.Add("SubCaption", "SubCaption");
            tableMapping.ColumnMappings.Add("SubSubCaption", "SubSubCaption");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("CurrentDate", "CurrentDate");
            tableMapping.ColumnMappings.Add("CurrentAmount", "CurrentAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`Finstat_Report_BalancesheetOrPL_Sub_Trend`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_MainCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_DurationType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_Company, string p_Currency, string p_DurationType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_MainCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Currency));
            }
            if ((p_DurationType == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_DurationType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_Company, string p_Currency, string p_DurationType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_MainCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Currency));
            }
            if ((p_DurationType == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_DurationType));
            }
            FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable dataTable = new FintrakDS.Finstat_Report_BalancesheetOrPL_Sub_TrendDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Finstat_Report_BalancesheetOrPL_Gl_TrendTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Finstat_Report_BalancesheetOrPL_Gl_TrendTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Finstat_Report_BalancesheetOrPL_Gl_Trend";
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("SubCaption", "SubCaption");
            tableMapping.ColumnMappings.Add("SubSubCaption", "SubSubCaption");
            tableMapping.ColumnMappings.Add("currentDate", "currentDate");
            tableMapping.ColumnMappings.Add("GLCode", "GLCode");
            tableMapping.ColumnMappings.Add("GLDescription", "GLDescription");
            tableMapping.ColumnMappings.Add("CurrentAmount", "CurrentAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`Finstat_Report_BalancesheetOrPL_Gl_Trend`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_MainCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_SubCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_DurationType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_SubCaption, string p_Company, string p_Currency, string p_DurationType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_MainCaption));
            }
            if ((p_SubCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_SubCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Currency));
            }
            if ((p_DurationType == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(p_DurationType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_SubCaption, string p_Company, string p_Currency, string p_DurationType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_MainCaption));
            }
            if ((p_SubCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_SubCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Currency));
            }
            if ((p_DurationType == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(p_DurationType));
            }
            FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable dataTable = new FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_TrendDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class finstat_Report_ManagementNoteBSTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public finstat_Report_ManagementNoteBSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "finstat_Report_ManagementNoteBS";
            tableMapping.ColumnMappings.Add("RunDate", "RunDate");
            tableMapping.ColumnMappings.Add("PreviousRunDate", "PreviousRunDate");
            tableMapping.ColumnMappings.Add("PreviousPreviousRunDate", "PreviousPreviousRunDate");
            tableMapping.ColumnMappings.Add("Averagerate", "Averagerate");
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("SubCaption", "SubCaption");
            tableMapping.ColumnMappings.Add("SubSubCaption", "SubSubCaption");
            tableMapping.ColumnMappings.Add("SubPosition", "SubPosition");
            tableMapping.ColumnMappings.Add("fintype", "fintype");
            tableMapping.ColumnMappings.Add("finsubtype", "finsubtype");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("RefNote", "RefNote");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("PreviousPreviousAmount", "PreviousPreviousAmount");
            tableMapping.ColumnMappings.Add("YTDVariance", "YTDVariance");
            tableMapping.ColumnMappings.Add("YTDVariancePercentage", "YTDVariancePercentage");
            tableMapping.ColumnMappings.Add("IsBold", "IsBold");
            tableMapping.ColumnMappings.Add("IsTotalLine", "IsTotalLine");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`finstat_Report_ManagementNoteBS`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.finstat_Report_ManagementNoteBSDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_Currency));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.finstat_Report_ManagementNoteBSDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_Currency));
            }
            FintrakDS.finstat_Report_ManagementNoteBSDataTable dataTable = new FintrakDS.finstat_Report_ManagementNoteBSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Finstat_Report_BalancesheetOrPL_Gl_ComparisonTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Finstat_Report_BalancesheetOrPL_Gl_ComparisonTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Finstat_Report_BalancesheetOrPL_Gl_Comparison";
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("SubCaption", "SubCaption");
            tableMapping.ColumnMappings.Add("SubSubCaption", "SubSubCaption");
            tableMapping.ColumnMappings.Add("GLCode", "GLCode");
            tableMapping.ColumnMappings.Add("GLDescription", "GLDescription");
            tableMapping.ColumnMappings.Add("PreviousDate", "PreviousDate");
            tableMapping.ColumnMappings.Add("CurrentDate", "CurrentDate");
            tableMapping.ColumnMappings.Add("CurrentAmount", "CurrentAmount");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("Growth", "Growth");
            tableMapping.ColumnMappings.Add("percentage", "percentage");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`Finstat_Report_BalancesheetOrPL_Gl_Comparison`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_PreviousDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_MainCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_SubCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable dataTable, global::System.Nullable<global::System.DateTime> p_PreviousDate, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_SubCaption, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_PreviousDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_PreviousDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_MainCaption));
            }
            if ((p_SubCaption == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_SubCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(p_Currency));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable GetData(global::System.Nullable<global::System.DateTime> p_PreviousDate, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_MainCaption, string p_SubCaption, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_PreviousDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_PreviousDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_MainCaption));
            }
            if ((p_SubCaption == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_SubCaption));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(p_Currency));
            }
            FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable dataTable = new FintrakDS.Finstat_Report_BalancesheetOrPL_Gl_ComparisonDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class finstat_Report_ManagementNotePLTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public finstat_Report_ManagementNotePLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "finstat_Report_ManagementNotePL";
            tableMapping.ColumnMappings.Add("RunDate", "RunDate");
            tableMapping.ColumnMappings.Add("PreviousRunDate", "PreviousRunDate");
            tableMapping.ColumnMappings.Add("PreviousPreviousRunDate", "PreviousPreviousRunDate");
            tableMapping.ColumnMappings.Add("Averagerate", "Averagerate");
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("SubCaption", "SubCaption");
            tableMapping.ColumnMappings.Add("SubSubCaption", "SubSubCaption");
            tableMapping.ColumnMappings.Add("SubPosition", "SubPosition");
            tableMapping.ColumnMappings.Add("fintype", "fintype");
            tableMapping.ColumnMappings.Add("finsubtype", "finsubtype");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("RefNote", "RefNote");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("YTDVariance", "YTDVariance");
            tableMapping.ColumnMappings.Add("YTDVariancePercentage", "YTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PreviousPreviousAmount", "PreviousPreviousAmount");
            tableMapping.ColumnMappings.Add("MTD", "MTD");
            tableMapping.ColumnMappings.Add("PrevMTD", "PrevMTD");
            tableMapping.ColumnMappings.Add("MTDVariance", "MTDVariance");
            tableMapping.ColumnMappings.Add("MTDVariancePercentage", "MTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PrevMONTH", "PrevMONTH");
            tableMapping.ColumnMappings.Add("IsBold", "IsBold");
            tableMapping.ColumnMappings.Add("IsTotalLine", "IsTotalLine");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`finstat_Report_ManagementNotePL`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.finstat_Report_ManagementNotePLDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_Currency));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.finstat_Report_ManagementNotePLDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_Currency));
            }
            FintrakDS.finstat_Report_ManagementNotePLDataTable dataTable = new FintrakDS.finstat_Report_ManagementNotePLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class finstat_Report_BalancesheetOrPL_GlTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public finstat_Report_BalancesheetOrPL_GlTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "finstat_Report_BalancesheetOrPL_Gl";
            tableMapping.ColumnMappings.Add("RunDate", "RunDate");
            tableMapping.ColumnMappings.Add("PreviousRunDate", "PreviousRunDate");
            tableMapping.ColumnMappings.Add("PreviousPreviousRunDate", "PreviousPreviousRunDate");
            tableMapping.ColumnMappings.Add("Averagerate", "Averagerate");
            tableMapping.ColumnMappings.Add("GlCode", "GlCode");
            tableMapping.ColumnMappings.Add("GlDescription", "GlDescription");
            tableMapping.ColumnMappings.Add("GlSubCode", "GlSubCode");
            tableMapping.ColumnMappings.Add("CompanyCode", "CompanyCode");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("YTDVariance", "YTDVariance");
            tableMapping.ColumnMappings.Add("YTDVariancePercentage", "YTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PreviousPreviousAmount", "PreviousPreviousAmount");
            tableMapping.ColumnMappings.Add("MTD", "MTD");
            tableMapping.ColumnMappings.Add("PrevMTD", "PrevMTD");
            tableMapping.ColumnMappings.Add("MTDVariance", "MTDVariance");
            tableMapping.ColumnMappings.Add("MTDVariancePercentage", "MTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PrevMONTH", "PrevMONTH");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`finstat_Report_BalancesheetOrPL_Gl`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_MainCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_SubCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_BudgetType";
            param.DbType = global::System.Data.DbType.Int16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int16;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.finstat_Report_BalancesheetOrPL_GlDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_ReportType, string p_MainCaption, string p_SubCaption, string p_Currency, global::System.Nullable<short> p_BudgetType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_MainCaption));
            }
            if ((p_SubCaption == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_SubCaption));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Currency));
            }
            if ((p_BudgetType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((short)(p_BudgetType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.finstat_Report_BalancesheetOrPL_GlDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_ReportType, string p_MainCaption, string p_SubCaption, string p_Currency, global::System.Nullable<short> p_BudgetType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_MainCaption));
            }
            if ((p_SubCaption == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_SubCaption));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(p_Currency));
            }
            if ((p_BudgetType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((short)(p_BudgetType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            FintrakDS.finstat_Report_BalancesheetOrPL_GlDataTable dataTable = new FintrakDS.finstat_Report_BalancesheetOrPL_GlDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class finstat_Report_BalancesheetOrPLTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public finstat_Report_BalancesheetOrPLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "finstat_Report_BalancesheetOrPL";
            tableMapping.ColumnMappings.Add("RunDate", "RunDate");
            tableMapping.ColumnMappings.Add("PreviousRunDate", "PreviousRunDate");
            tableMapping.ColumnMappings.Add("PreviousPreviousRunDate", "PreviousPreviousRunDate");
            tableMapping.ColumnMappings.Add("Averagerate", "Averagerate");
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("fintype", "fintype");
            tableMapping.ColumnMappings.Add("finsubtype", "finsubtype");
            tableMapping.ColumnMappings.Add("TotalLine", "TotalLine");
            tableMapping.ColumnMappings.Add("refnote", "refnote");
            tableMapping.ColumnMappings.Add("position", "position");
            tableMapping.ColumnMappings.Add("ReportColor", "ReportColor");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("YTDVariance", "YTDVariance");
            tableMapping.ColumnMappings.Add("YTDVariancePercentage", "YTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PreviousPreviousAmount", "PreviousPreviousAmount");
            tableMapping.ColumnMappings.Add("MTD", "MTD");
            tableMapping.ColumnMappings.Add("PrevMTD", "PrevMTD");
            tableMapping.ColumnMappings.Add("MTDVariance", "MTDVariance");
            tableMapping.ColumnMappings.Add("MTDVariancePercentage", "MTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PrevMONTH", "PrevMONTH");
            tableMapping.ColumnMappings.Add("BudgetYTD", "BudgetYTD");
            tableMapping.ColumnMappings.Add("BudgetMTD", "BudgetMTD");
            tableMapping.ColumnMappings.Add("MTDAchieved", "MTDAchieved");
            tableMapping.ColumnMappings.Add("YTDAchieved", "YTDAchieved");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`finstat_Report_BalancesheetOrPL`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_BudgetType";
            param.DbType = global::System.Data.DbType.Int16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int16;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.finstat_Report_BalancesheetOrPLDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_ReportType, string p_Currency, global::System.Nullable<short> p_BudgetType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Currency));
            }
            if ((p_BudgetType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(p_BudgetType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.finstat_Report_BalancesheetOrPLDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_ReportType, string p_Currency, global::System.Nullable<short> p_BudgetType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Currency));
            }
            if ((p_BudgetType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((short)(p_BudgetType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            FintrakDS.finstat_Report_BalancesheetOrPLDataTable dataTable = new FintrakDS.finstat_Report_BalancesheetOrPLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class finstat_Report_BalancesheetOrPL_SubTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public finstat_Report_BalancesheetOrPL_SubTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "finstat_Report_BalancesheetOrPL_Sub";
            tableMapping.ColumnMappings.Add("RunDate", "RunDate");
            tableMapping.ColumnMappings.Add("PreviousRunDate", "PreviousRunDate");
            tableMapping.ColumnMappings.Add("PreviousPreviousRunDate", "PreviousPreviousRunDate");
            tableMapping.ColumnMappings.Add("Averagerate", "Averagerate");
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("SubCaption", "SubCaption");
            tableMapping.ColumnMappings.Add("SubPosition", "SubPosition");
            tableMapping.ColumnMappings.Add("fintype", "fintype");
            tableMapping.ColumnMappings.Add("finsubtype", "finsubtype");
            tableMapping.ColumnMappings.Add("position", "position");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("YTDVariance", "YTDVariance");
            tableMapping.ColumnMappings.Add("YTDVariancePercentage", "YTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PreviousPreviousAmount", "PreviousPreviousAmount");
            tableMapping.ColumnMappings.Add("MTD", "MTD");
            tableMapping.ColumnMappings.Add("PrevMTD", "PrevMTD");
            tableMapping.ColumnMappings.Add("MTDVariance", "MTDVariance");
            tableMapping.ColumnMappings.Add("MTDVariancePercentage", "MTDVariancePercentage");
            tableMapping.ColumnMappings.Add("PrevMONTH", "PrevMONTH");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`finstat_Report_BalancesheetOrPL_Sub`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_MainCaption";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_BudgetType";
            param.DbType = global::System.Data.DbType.Int16;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int16;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.finstat_Report_BalancesheetOrPL_SubDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_ReportType, string p_Currency, string p_MainCaption, global::System.Nullable<short> p_BudgetType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Currency));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_MainCaption));
            }
            if ((p_BudgetType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((short)(p_BudgetType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.finstat_Report_BalancesheetOrPL_SubDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_Company, string p_ReportType, string p_Currency, string p_MainCaption, global::System.Nullable<short> p_BudgetType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Company));
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Currency));
            }
            if ((p_MainCaption == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_MainCaption));
            }
            if ((p_BudgetType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((short)(p_BudgetType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            FintrakDS.finstat_Report_BalancesheetOrPL_SubDataTable dataTable = new FintrakDS.finstat_Report_BalancesheetOrPL_SubDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetReport_DivisorTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public GetReport_DivisorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetReport_Divisor";
            tableMapping.ColumnMappings.Add("divisor", "divisor");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`GetReport_Divisor`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.GetReport_DivisorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.GetReport_DivisorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FintrakDS.GetReport_DivisorDataTable dataTable = new FintrakDS.GetReport_DivisorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Finstat_Reports_QualitativeNotesTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Finstat_Reports_QualitativeNotesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Finstat_Reports_QualitativeNotes";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("TopNotes", "TopNotes");
            tableMapping.ColumnMappings.Add("BottomNotes", "BottomNotes");
            tableMapping.ColumnMappings.Add("Rundate", "Rundate");
            tableMapping.ColumnMappings.Add("Report", "Report");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`Finstat_Reports_QualitativeNotes`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Report";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.Finstat_Reports_QualitativeNotesDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_Report) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Report == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Report));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.Finstat_Reports_QualitativeNotesDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_Report) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_Report == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Report));
            }
            FintrakDS.Finstat_Reports_QualitativeNotesDataTable dataTable = new FintrakDS.Finstat_Reports_QualitativeNotesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Finstat_Report_BalancesheetOrPL_TrendTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Finstat_Report_BalancesheetOrPL_TrendTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Finstat_Report_BalancesheetOrPL_Trend";
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("CurrentDate", "CurrentDate");
            tableMapping.ColumnMappings.Add("CurrentAmount", "CurrentAmount");
            tableMapping.ColumnMappings.Add("RefNote", "RefNote");
            tableMapping.ColumnMappings.Add("Class", "Class");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("ReportColor", "ReportColor");
            tableMapping.ColumnMappings.Add("FinType", "FinType");
            tableMapping.ColumnMappings.Add("TotalLine", "TotalLine");
            tableMapping.ColumnMappings.Add("FinSubType", "FinSubType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`Finstat_Report_BalancesheetOrPL_Trend`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.DateTime;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_DurationType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.Finstat_Report_BalancesheetOrPL_TrendDataTable dataTable, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_Company, string p_Currency, string p_DurationType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_ReportType));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Currency));
            }
            if ((p_DurationType == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_DurationType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.Finstat_Report_BalancesheetOrPL_TrendDataTable GetData(global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_Company, string p_Currency, string p_DurationType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_ReportType));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Currency));
            }
            if ((p_DurationType == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_DurationType));
            }
            FintrakDS.Finstat_Report_BalancesheetOrPL_TrendDataTable dataTable = new FintrakDS.Finstat_Report_BalancesheetOrPL_TrendDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Finstat_Report_BalancesheetOrPL_ComparisonTestTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Finstat_Report_BalancesheetOrPL_ComparisonTestTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Finstat_Report_BalancesheetOrPL_ComparisonTest";
            tableMapping.ColumnMappings.Add("MainCaption", "MainCaption");
            tableMapping.ColumnMappings.Add("CurrentDate", "CurrentDate");
            tableMapping.ColumnMappings.Add("PreviousAmount", "PreviousAmount");
            tableMapping.ColumnMappings.Add("CurrentAmount", "CurrentAmount");
            tableMapping.ColumnMappings.Add("Growth", "Growth");
            tableMapping.ColumnMappings.Add("PreviousDate", "PreviousDate");
            tableMapping.ColumnMappings.Add("percentage", "percentage");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("Position", "Position");
            tableMapping.ColumnMappings.Add("ReportColor", "ReportColor");
            tableMapping.ColumnMappings.Add("FinType", "FinType");
            tableMapping.ColumnMappings.Add("TotalLine", "TotalLine");
            tableMapping.ColumnMappings.Add("FinSubType", "FinSubType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["fintrakdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "`fintrakdb`.`Finstat_Report_BalancesheetOrPL_ComparisonTest`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_PreviousDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_RunDate";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_ReportType";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Company";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "p_Currency";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Current;
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FintrakDS.Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable dataTable, global::System.Nullable<global::System.DateTime> p_PreviousDate, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_PreviousDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_PreviousDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Currency));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FintrakDS.Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable GetData(global::System.Nullable<global::System.DateTime> p_PreviousDate, global::System.Nullable<global::System.DateTime> p_RunDate, string p_ReportType, string p_Company, string p_Currency) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_PreviousDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(p_PreviousDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p_RunDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(p_RunDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_ReportType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(p_ReportType));
            }
            if ((p_Company == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(p_Company));
            }
            if ((p_Currency == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(p_Currency));
            }
            FintrakDS.Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable dataTable = new FintrakDS.Finstat_Report_BalancesheetOrPL_ComparisonTestDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(FintrakDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(FintrakDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(FintrakDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(FintrakDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591