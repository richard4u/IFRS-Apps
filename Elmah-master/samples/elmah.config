<?xml version="1.0" encoding="utf-8"?>
<elmah>

    <security allowRemoteAccess="0" />

    <!--
        Use to log errors into separate XML files that are stored on 
        disk at the path specified in the logPath attribute.

    <errorLog type="Elmah.XmlFileErrorLog, Elmah" logPath="..." />
    -->

    <!--
        Use to send error reports by e-mail and adjust the attributes
        according to settings desired. Note that only the from and
        to attributes are required. The rest are optional and may
        be removed. If the SMTP server does not require authentication,
        you MUST remove the userName and password attributes or
        set them to empty values (resulting in zero-length strings).
        If you are using ELMAH compiled for .NET Framework 1.x, then
        the to attribute may contain multiple recipient addresses,
        each of which must be delimited by a semi-colon(;). If you are 
        using ELMAH compiled for .NET Framework 2.0 or later, then the
        to attribute may contain multiple recipient addresses,
        each of which must be delimited by a comma (,).

    <errorMail 
        from="elmah@example.com" 
        to="admin@example.com" 
        subject="..."
        priority="Low|Normal|High"
        async="true|false"
        smtpPort="25"
        smtpServer="smtp.example.com" 
        useSsl="true|false"
        userName="johndoe"
        password="secret" 
        noYsod="true|false" />
    -->

    <!--
        Use to send short error messages to a twitter account.
    <errorTweet 
        userName="johndoe" 
        password="secret" />
    -->

    <!--
        Use to prevent errors from being mailed or logged based on
        assertions. An assertion evaluates the current context, resulting
        in a Boolean outcome. An error is filtered if the assertion results
        in true. For a more detailed explanation, see:
            
        http://code.google.com/p/elmah/wiki/ErrorFiltering
            
        The example below will filter errors when any of the
        following conditions occur:
            
        - The status code is set to 404 
        - The root/base cause is System.IO.FileNotFoundException
        - The root/base cause is System.Web.HttpRequestValidationException
        - The user agent making the request identifies itself as "crawler"
        - The request is from the local machine
            
        The assertion below is expressed as a JScript expression and is the
        most generic and simplest of the assertions to use if you are
        familiar with the JavaScript language. It can work in Medium and
        Full trust environments.

        NOTE: For versions of ELMAH 1.2 SP1 and earlier, use the 
        undocumented `$context` instead of `$` in the expression below 
        to workaround a bug when the expression is evaluated under full 
        trust environments. See issue #278[1] for more details.            
            
        [1] http://code.google.com/p/elmah/issues/detail?id=278

    <errorFilter>
        <test>
            <jscript>
                <expression>
                <![CDATA[
                // @assembly mscorlib
                // @assembly System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
                // @import System.IO
                // @import System.Web

                $.HttpStatusCode == 404
                || $.BaseException instanceof FileNotFoundException 
                || $.BaseException instanceof HttpRequestValidationException
                /* Using RegExp below (see http://msdn.microsoft.com/en-us/library/h6e2eb7w.aspx) */
                || $.Context.Request.UserAgent.match(/crawler/i)                      
                || $.Context.Request.ServerVariables['REMOTE_ADDR'] == '127.0.0.1' // IPv4 only
                ]]>
                </expression>
            </jscript>
        </test>
    </errorFilter>
    -->

</elmah>
